
AVRASM ver. 2.2.6  E:\micro\projfinall\projfinall\main.asm Fri Oct 27 13:51:49 2017

[builtin](2): Including file 'E:/avr studio\7.0\Packs\atmel\ATmega_DFP\1.2.132\avrasm\inc\m2560def.inc'
E:\micro\projfinall\projfinall\main.asm(1): Including file 'E:/avr studio\7.0\Packs\atmel\ATmega_DFP\1.2.132\avrasm\inc\m2560def.inc'
[builtin](2): Including file 'E:/avr studio\7.0\Packs\atmel\ATmega_DFP\1.2.132\avrasm\inc\m2560def.inc'
E:\micro\projfinall\projfinall\main.asm(1): Including file 'E:/avr studio\7.0\Packs\atmel\ATmega_DFP\1.2.132\avrasm\inc\m2560def.inc'
                                 
                                 .include "m2560def.inc"
                                 
                                 ;***** Created: 2011-02-09 12:03 ******* Source: ATmega2560.xml **********
                                 ;*************************************************************************
                                 ;* A P P L I C A T I O N   N O T E   F O R   T H E   A V R   F A M I L Y
                                 ;* 
                                 ;* Number            : AVR000
                                 ;* File Name         : "m2560def.inc"
                                 ;* Title             : Register/Bit Definitions for the ATmega2560
                                 ;* Date              : 2011-02-09
                                 ;* Version           : 2.35
                                 ;* Support E-mail    : avr@atmel.com
                                 ;* Target MCU        : ATmega2560
                                 ;* 
                                 ;* DESCRIPTION
                                 ;* When including this file in the assembly program file, all I/O register 
                                 ;* names and I/O register bit names appearing in the data book can be used.
                                 ;* In addition, the six registers forming the three data pointers X, Y and 
                                 ;* Z have been assigned names XL - ZH. Highest RAM address for Internal 
                                 ;* SRAM is also defined 
                                 ;* 
                                 ;* The Register names are represented by their hexadecimal address.
                                 ;* 
                                 ;* The Register Bit names are represented by their bit number (0-7).
                                 ;* 
                                 ;* Please observe the difference in using the bit names with instructions
                                 ;* such as "sbr"/"cbr" (set/clear bit in register) and "sbrs"/"sbrc"
                                 ;* (skip if bit in register set/cleared). The following example illustrates
                                 ;* this:
                                 ;* 
                                 ;* in    r16,PORTB             ;read PORTB latch
                                 ;* sbr   r16,(1<<PB6)+(1<<PB5) ;set PB6 and PB5 (use masks, not bit#)
                                 ;* out   PORTB,r16             ;output to PORTB
                                 ;* 
                                 ;* in    r16,TIFR              ;read the Timer Interrupt Flag Register
                                 ;* sbrc  r16,TOV0              ;test the overflow flag (use bit#)
                                 ;* rjmp  TOV0_is_set           ;jump if set
                                 ;* ...                         ;otherwise do something else
                                 ;*************************************************************************
                                 
                                 #ifndef _M2560DEF_INC_
                                 #define _M2560DEF_INC_
                                 
                                 
                                 #pragma partinc 0
                                 
                                 ; ***** SPECIFY DEVICE ***************************************************
                                 .device ATmega2560
                                 #pragma AVRPART ADMIN PART_NAME ATmega2560
                                 .equ	SIGNATURE_000	= 0x1e
                                 .equ	SIGNATURE_001	= 0x98
                                 .equ	SIGNATURE_002	= 0x01
                                 
                                 #pragma AVRPART CORE CORE_VERSION V3
                                 
                                 
                                 ; ***** I/O REGISTER DEFINITIONS *****************************************
                                 ; NOTE:
                                 ; Definitions marked "MEMORY MAPPED"are extended I/O ports
                                 ; and cannot be used with IN/OUT instructions
                                 .equ	UDR3	= 0x136	; MEMORY MAPPED
                                 .equ	UBRR3L	= 0x134	; MEMORY MAPPED
                                 .equ	UBRR3H	= 0x135	; MEMORY MAPPED
                                 .equ	UCSR3C	= 0x132	; MEMORY MAPPED
                                 .equ	UCSR3B	= 0x131	; MEMORY MAPPED
                                 .equ	UCSR3A	= 0x130	; MEMORY MAPPED
                                 .equ	OCR5CL	= 0x12c	; MEMORY MAPPED
                                 .equ	OCR5CH	= 0x12d	; MEMORY MAPPED
                                 .equ	OCR5BL	= 0x12a	; MEMORY MAPPED
                                 .equ	OCR5BH	= 0x12b	; MEMORY MAPPED
                                 .equ	OCR5AL	= 0x128	; MEMORY MAPPED
                                 .equ	OCR5AH	= 0x129	; MEMORY MAPPED
                                 .equ	ICR5H	= 0x127	; MEMORY MAPPED
                                 .equ	ICR5L	= 0x126	; MEMORY MAPPED
                                 .equ	TCNT5L	= 0x124	; MEMORY MAPPED
                                 .equ	TCNT5H	= 0x125	; MEMORY MAPPED
                                 .equ	TCCR5C	= 0x122	; MEMORY MAPPED
                                 .equ	TCCR5B	= 0x121	; MEMORY MAPPED
                                 .equ	TCCR5A	= 0x120	; MEMORY MAPPED
                                 .equ	PORTL	= 0x10b	; MEMORY MAPPED
                                 .equ	DDRL	= 0x10a	; MEMORY MAPPED
                                 .equ	PINL	= 0x109	; MEMORY MAPPED
                                 .equ	PORTK	= 0x108	; MEMORY MAPPED
                                 .equ	DDRK	= 0x107	; MEMORY MAPPED
                                 .equ	PINK	= 0x106	; MEMORY MAPPED
                                 .equ	PORTJ	= 0x105	; MEMORY MAPPED
                                 .equ	DDRJ	= 0x104	; MEMORY MAPPED
                                 .equ	PINJ	= 0x103	; MEMORY MAPPED
                                 .equ	PORTH	= 0x102	; MEMORY MAPPED
                                 .equ	DDRH	= 0x101	; MEMORY MAPPED
                                 .equ	PINH	= 0x100	; MEMORY MAPPED
                                 .equ	UDR2	= 0xd6	; MEMORY MAPPED
                                 .equ	UBRR2L	= 0xd4	; MEMORY MAPPED
                                 .equ	UBRR2H	= 0xd5	; MEMORY MAPPED
                                 .equ	UCSR2C	= 0xd2	; MEMORY MAPPED
                                 .equ	UCSR2B	= 0xd1	; MEMORY MAPPED
                                 .equ	UCSR2A	= 0xd0	; MEMORY MAPPED
                                 .equ	UDR1	= 0xce	; MEMORY MAPPED
                                 .equ	UBRR1L	= 0xcc	; MEMORY MAPPED
                                 .equ	UBRR1H	= 0xcd	; MEMORY MAPPED
                                 .equ	UCSR1C	= 0xca	; MEMORY MAPPED
                                 .equ	UCSR1B	= 0xc9	; MEMORY MAPPED
                                 .equ	UCSR1A	= 0xc8	; MEMORY MAPPED
                                 .equ	UDR0	= 0xc6	; MEMORY MAPPED
                                 .equ	UBRR0L	= 0xc4	; MEMORY MAPPED
                                 .equ	UBRR0H	= 0xc5	; MEMORY MAPPED
                                 .equ	UCSR0C	= 0xc2	; MEMORY MAPPED
                                 .equ	UCSR0B	= 0xc1	; MEMORY MAPPED
                                 .equ	UCSR0A	= 0xc0	; MEMORY MAPPED
                                 .equ	TWAMR	= 0xbd	; MEMORY MAPPED
                                 .equ	TWCR	= 0xbc	; MEMORY MAPPED
                                 .equ	TWDR	= 0xbb	; MEMORY MAPPED
                                 .equ	TWAR	= 0xba	; MEMORY MAPPED
                                 .equ	TWSR	= 0xb9	; MEMORY MAPPED
                                 .equ	TWBR	= 0xb8	; MEMORY MAPPED
                                 .equ	ASSR	= 0xb6	; MEMORY MAPPED
                                 .equ	OCR2B	= 0xb4	; MEMORY MAPPED
                                 .equ	OCR2A	= 0xb3	; MEMORY MAPPED
                                 .equ	TCNT2	= 0xb2	; MEMORY MAPPED
                                 .equ	TCCR2B	= 0xb1	; MEMORY MAPPED
                                 .equ	TCCR2A	= 0xb0	; MEMORY MAPPED
                                 .equ	OCR4CL	= 0xac	; MEMORY MAPPED
                                 .equ	OCR4CH	= 0xad	; MEMORY MAPPED
                                 .equ	OCR4BL	= 0xaa	; MEMORY MAPPED
                                 .equ	OCR4BH	= 0xab	; MEMORY MAPPED
                                 .equ	OCR4AL	= 0xa8	; MEMORY MAPPED
                                 .equ	OCR4AH	= 0xa9	; MEMORY MAPPED
                                 .equ	ICR4L	= 0xa6	; MEMORY MAPPED
                                 .equ	ICR4H	= 0xa7	; MEMORY MAPPED
                                 .equ	TCNT4L	= 0xa4	; MEMORY MAPPED
                                 .equ	TCNT4H	= 0xa5	; MEMORY MAPPED
                                 .equ	TCCR4C	= 0xa2	; MEMORY MAPPED
                                 .equ	TCCR4B	= 0xa1	; MEMORY MAPPED
                                 .equ	TCCR4A	= 0xa0	; MEMORY MAPPED
                                 .equ	OCR3CL	= 0x9c	; MEMORY MAPPED
                                 .equ	OCR3CH	= 0x9d	; MEMORY MAPPED
                                 .equ	OCR3BL	= 0x9a	; MEMORY MAPPED
                                 .equ	OCR3BH	= 0x9b	; MEMORY MAPPED
                                 .equ	OCR3AL	= 0x98	; MEMORY MAPPED
                                 .equ	OCR3AH	= 0x99	; MEMORY MAPPED
                                 .equ	ICR3L	= 0x96	; MEMORY MAPPED
                                 .equ	ICR3H	= 0x97	; MEMORY MAPPED
                                 .equ	TCNT3L	= 0x94	; MEMORY MAPPED
                                 .equ	TCNT3H	= 0x95	; MEMORY MAPPED
                                 .equ	TCCR3C	= 0x92	; MEMORY MAPPED
                                 .equ	TCCR3B	= 0x91	; MEMORY MAPPED
                                 .equ	TCCR3A	= 0x90	; MEMORY MAPPED
                                 .equ	OCR1CL	= 0x8c	; MEMORY MAPPED
                                 .equ	OCR1CH	= 0x8d	; MEMORY MAPPED
                                 .equ	OCR1BL	= 0x8a	; MEMORY MAPPED
                                 .equ	OCR1BH	= 0x8b	; MEMORY MAPPED
                                 .equ	OCR1AL	= 0x88	; MEMORY MAPPED
                                 .equ	OCR1AH	= 0x89	; MEMORY MAPPED
                                 .equ	ICR1L	= 0x86	; MEMORY MAPPED
                                 .equ	ICR1H	= 0x87	; MEMORY MAPPED
                                 .equ	TCNT1L	= 0x84	; MEMORY MAPPED
                                 .equ	TCNT1H	= 0x85	; MEMORY MAPPED
                                 .equ	TCCR1C	= 0x82	; MEMORY MAPPED
                                 .equ	TCCR1B	= 0x81	; MEMORY MAPPED
                                 .equ	TCCR1A	= 0x80	; MEMORY MAPPED
                                 .equ	DIDR1	= 0x7f	; MEMORY MAPPED
                                 .equ	DIDR0	= 0x7e	; MEMORY MAPPED
                                 .equ	DIDR2	= 0x7d	; MEMORY MAPPED
                                 .equ	ADMUX	= 0x7c	; MEMORY MAPPED
                                 .equ	ADCSRB	= 0x7b	; MEMORY MAPPED
                                 .equ	ADCSRA	= 0x7a	; MEMORY MAPPED
                                 .equ	ADCH	= 0x79	; MEMORY MAPPED
                                 .equ	ADCL	= 0x78	; MEMORY MAPPED
                                 .equ	XMCRB	= 0x75	; MEMORY MAPPED
                                 .equ	XMCRA	= 0x74	; MEMORY MAPPED
                                 .equ	TIMSK5	= 0x73	; MEMORY MAPPED
                                 .equ	TIMSK4	= 0x72	; MEMORY MAPPED
                                 .equ	TIMSK3	= 0x71	; MEMORY MAPPED
                                 .equ	TIMSK2	= 0x70	; MEMORY MAPPED
                                 .equ	TIMSK1	= 0x6f	; MEMORY MAPPED
                                 .equ	TIMSK0	= 0x6e	; MEMORY MAPPED
                                 .equ	PCMSK2	= 0x6d	; MEMORY MAPPED
                                 .equ	PCMSK1	= 0x6c	; MEMORY MAPPED
                                 .equ	PCMSK0	= 0x6b	; MEMORY MAPPED
                                 .equ	EICRB	= 0x6a	; MEMORY MAPPED
                                 .equ	EICRA	= 0x69	; MEMORY MAPPED
                                 .equ	PCICR	= 0x68	; MEMORY MAPPED
                                 .equ	OSCCAL	= 0x66	; MEMORY MAPPED
                                 .equ	PRR1	= 0x65	; MEMORY MAPPED
                                 .equ	PRR0	= 0x64	; MEMORY MAPPED
                                 .equ	CLKPR	= 0x61	; MEMORY MAPPED
                                 .equ	WDTCSR	= 0x60	; MEMORY MAPPED
                                 .equ	SREG	= 0x3f
                                 .equ	SPL	= 0x3d
                                 .equ	SPH	= 0x3e
                                 .equ	EIND	= 0x3c
                                 .equ	RAMPZ	= 0x3b
                                 .equ	SPMCSR	= 0x37
                                 .equ	MCUCR	= 0x35
                                 .equ	MCUSR	= 0x34
                                 .equ	SMCR	= 0x33
                                 .equ	OCDR	= 0x31
                                 .equ	ACSR	= 0x30
                                 .equ	SPDR	= 0x2e
                                 .equ	SPSR	= 0x2d
                                 .equ	SPCR	= 0x2c
                                 .equ	GPIOR2	= 0x2b
                                 .equ	GPIOR1	= 0x2a
                                 .equ	OCR0B	= 0x28
                                 .equ	OCR0A	= 0x27
                                 .equ	TCNT0	= 0x26
                                 .equ	TCCR0B	= 0x25
                                 .equ	TCCR0A	= 0x24
                                 .equ	GTCCR	= 0x23
                                 .equ	EEARH	= 0x22
                                 .equ	EEARL	= 0x21
                                 .equ	EEDR	= 0x20
                                 .equ	EECR	= 0x1f
                                 .equ	GPIOR0	= 0x1e
                                 .equ	EIMSK	= 0x1d
                                 .equ	EIFR	= 0x1c
                                 .equ	PCIFR	= 0x1b
                                 .equ	TIFR5	= 0x1a
                                 .equ	TIFR4	= 0x19
                                 .equ	TIFR3	= 0x18
                                 .equ	TIFR2	= 0x17
                                 .equ	TIFR1	= 0x16
                                 .equ	TIFR0	= 0x15
                                 .equ	PORTG	= 0x14
                                 .equ	DDRG	= 0x13
                                 .equ	PING	= 0x12
                                 .equ	PORTF	= 0x11
                                 .equ	DDRF	= 0x10
                                 .equ	PINF	= 0x0f
                                 .equ	PORTE	= 0x0e
                                 .equ	DDRE	= 0x0d
                                 .equ	PINE	= 0x0c
                                 .equ	PORTD	= 0x0b
                                 .equ	DDRD	= 0x0a
                                 .equ	PIND	= 0x09
                                 .equ	PORTC	= 0x08
                                 .equ	DDRC	= 0x07
                                 .equ	PINC	= 0x06
                                 .equ	PORTB	= 0x05
                                 .equ	DDRB	= 0x04
                                 .equ	PINB	= 0x03
                                 .equ	PORTA	= 0x02
                                 .equ	DDRA	= 0x01
                                 .equ	PINA	= 0x00
                                 
                                 
                                 ; ***** BIT DEFINITIONS **************************************************
                                 
                                 ; ***** ANALOG_COMPARATOR ************
                                 ; ADCSRB - ADC Control and Status Register B
                                 .equ	ACME	= 6	; Analog Comparator Multiplexer Enable
                                 
                                 ; ACSR - Analog Comparator Control And Status Register
                                 .equ	ACIS0	= 0	; Analog Comparator Interrupt Mode Select bit 0
                                 .equ	ACIS1	= 1	; Analog Comparator Interrupt Mode Select bit 1
                                 .equ	ACIC	= 2	; Analog Comparator Input Capture Enable
                                 .equ	ACIE	= 3	; Analog Comparator Interrupt Enable
                                 .equ	ACI	= 4	; Analog Comparator Interrupt Flag
                                 .equ	ACO	= 5	; Analog Compare Output
                                 .equ	ACBG	= 6	; Analog Comparator Bandgap Select
                                 .equ	ACD	= 7	; Analog Comparator Disable
                                 
                                 ; DIDR1 - Digital Input Disable Register 1
                                 .equ	AIN0D	= 0	; AIN0 Digital Input Disable
                                 .equ	AIN1D	= 1	; AIN1 Digital Input Disable
                                 
                                 
                                 ; ***** USART0 ***********************
                                 ; UDR0 - USART I/O Data Register
                                 .equ	UDR0_0	= 0	; USART I/O Data Register bit 0
                                 .equ	UDR0_1	= 1	; USART I/O Data Register bit 1
                                 .equ	UDR0_2	= 2	; USART I/O Data Register bit 2
                                 .equ	UDR0_3	= 3	; USART I/O Data Register bit 3
                                 .equ	UDR0_4	= 4	; USART I/O Data Register bit 4
                                 .equ	UDR0_5	= 5	; USART I/O Data Register bit 5
                                 .equ	UDR0_6	= 6	; USART I/O Data Register bit 6
                                 .equ	UDR0_7	= 7	; USART I/O Data Register bit 7
                                 
                                 ; UCSR0A - USART Control and Status Register A
                                 .equ	MPCM0	= 0	; Multi-processor Communication Mode
                                 .equ	U2X0	= 1	; Double the USART transmission speed
                                 .equ	UPE0	= 2	; Parity Error
                                 .equ	DOR0	= 3	; Data overRun
                                 .equ	FE0	= 4	; Framing Error
                                 .equ	UDRE0	= 5	; USART Data Register Empty
                                 .equ	TXC0	= 6	; USART Transmitt Complete
                                 .equ	RXC0	= 7	; USART Receive Complete
                                 
                                 ; UCSR0B - USART Control and Status Register B
                                 .equ	TXB80	= 0	; Transmit Data Bit 8
                                 .equ	RXB80	= 1	; Receive Data Bit 8
                                 .equ	UCSZ02	= 2	; Character Size
                                 .equ	TXEN0	= 3	; Transmitter Enable
                                 .equ	RXEN0	= 4	; Receiver Enable
                                 .equ	UDRIE0	= 5	; USART Data register Empty Interrupt Enable
                                 .equ	TXCIE0	= 6	; TX Complete Interrupt Enable
                                 .equ	RXCIE0	= 7	; RX Complete Interrupt Enable
                                 
                                 ; UCSR0C - USART Control and Status Register C
                                 .equ	UCPOL0	= 0	; Clock Polarity
                                 .equ	UCSZ00	= 1	; Character Size
                                 .equ	UCPHA0	= UCSZ00	; For compatibility
                                 .equ	UCSZ01	= 2	; Character Size
                                 .equ	UDORD0	= UCSZ01	; For compatibility
                                 .equ	USBS0	= 3	; Stop Bit Select
                                 .equ	UPM00	= 4	; Parity Mode Bit 0
                                 .equ	UPM01	= 5	; Parity Mode Bit 1
                                 .equ	UMSEL00	= 6	; USART Mode Select
                                 .equ	UMSEL0	= UMSEL00	; For compatibility
                                 .equ	UMSEL01	= 7	; USART Mode Select
                                 .equ	UMSEL1	= UMSEL01	; For compatibility
                                 
                                 ; UBRR0H - USART Baud Rate Register High Byte
                                 .equ	UBRR8	= 0	; USART Baud Rate Register bit 8
                                 .equ	UBRR9	= 1	; USART Baud Rate Register bit 9
                                 .equ	UBRR10	= 2	; USART Baud Rate Register bit 10
                                 .equ	UBRR11	= 3	; USART Baud Rate Register bit 11
                                 
                                 ; UBRR0L - USART Baud Rate Register Low Byte
                                 .equ	_UBRR0	= 0	; USART Baud Rate Register bit 0
                                 .equ	_UBRR1	= 1	; USART Baud Rate Register bit 1
                                 .equ	UBRR2	= 2	; USART Baud Rate Register bit 2
                                 .equ	UBRR3	= 3	; USART Baud Rate Register bit 3
                                 .equ	UBRR4	= 4	; USART Baud Rate Register bit 4
                                 .equ	UBRR5	= 5	; USART Baud Rate Register bit 5
                                 .equ	UBRR6	= 6	; USART Baud Rate Register bit 6
                                 .equ	UBRR7	= 7	; USART Baud Rate Register bit 7
                                 
                                 
                                 ; ***** TWI **************************
                                 ; TWAMR - TWI (Slave) Address Mask Register
                                 .equ	TWAM0	= 1	; 
                                 .equ	TWAMR0	= TWAM0	; For compatibility
                                 .equ	TWAM1	= 2	; 
                                 .equ	TWAMR1	= TWAM1	; For compatibility
                                 .equ	TWAM2	= 3	; 
                                 .equ	TWAMR2	= TWAM2	; For compatibility
                                 .equ	TWAM3	= 4	; 
                                 .equ	TWAMR3	= TWAM3	; For compatibility
                                 .equ	TWAM4	= 5	; 
                                 .equ	TWAMR4	= TWAM4	; For compatibility
                                 .equ	TWAM5	= 6	; 
                                 .equ	TWAMR5	= TWAM5	; For compatibility
                                 .equ	TWAM6	= 7	; 
                                 .equ	TWAMR6	= TWAM6	; For compatibility
                                 
                                 ; TWBR - TWI Bit Rate register
                                 .equ	TWBR0	= 0	; 
                                 .equ	TWBR1	= 1	; 
                                 .equ	TWBR2	= 2	; 
                                 .equ	TWBR3	= 3	; 
                                 .equ	TWBR4	= 4	; 
                                 .equ	TWBR5	= 5	; 
                                 .equ	TWBR6	= 6	; 
                                 .equ	TWBR7	= 7	; 
                                 
                                 ; TWCR - TWI Control Register
                                 .equ	TWIE	= 0	; TWI Interrupt Enable
                                 .equ	TWEN	= 2	; TWI Enable Bit
                                 .equ	TWWC	= 3	; TWI Write Collition Flag
                                 .equ	TWSTO	= 4	; TWI Stop Condition Bit
                                 .equ	TWSTA	= 5	; TWI Start Condition Bit
                                 .equ	TWEA	= 6	; TWI Enable Acknowledge Bit
                                 .equ	TWINT	= 7	; TWI Interrupt Flag
                                 
                                 ; TWSR - TWI Status Register
                                 .equ	TWPS0	= 0	; TWI Prescaler
                                 .equ	TWPS1	= 1	; TWI Prescaler
                                 .equ	TWS3	= 3	; TWI Status
                                 .equ	TWS4	= 4	; TWI Status
                                 .equ	TWS5	= 5	; TWI Status
                                 .equ	TWS6	= 6	; TWI Status
                                 .equ	TWS7	= 7	; TWI Status
                                 
                                 ; TWDR - TWI Data register
                                 .equ	TWD0	= 0	; TWI Data Register Bit 0
                                 .equ	TWD1	= 1	; TWI Data Register Bit 1
                                 .equ	TWD2	= 2	; TWI Data Register Bit 2
                                 .equ	TWD3	= 3	; TWI Data Register Bit 3
                                 .equ	TWD4	= 4	; TWI Data Register Bit 4
                                 .equ	TWD5	= 5	; TWI Data Register Bit 5
                                 .equ	TWD6	= 6	; TWI Data Register Bit 6
                                 .equ	TWD7	= 7	; TWI Data Register Bit 7
                                 
                                 ; TWAR - TWI (Slave) Address register
                                 .equ	TWGCE	= 0	; TWI General Call Recognition Enable Bit
                                 .equ	TWA0	= 1	; TWI (Slave) Address register Bit 0
                                 .equ	TWA1	= 2	; TWI (Slave) Address register Bit 1
                                 .equ	TWA2	= 3	; TWI (Slave) Address register Bit 2
                                 .equ	TWA3	= 4	; TWI (Slave) Address register Bit 3
                                 .equ	TWA4	= 5	; TWI (Slave) Address register Bit 4
                                 .equ	TWA5	= 6	; TWI (Slave) Address register Bit 5
                                 .equ	TWA6	= 7	; TWI (Slave) Address register Bit 6
                                 
                                 
                                 ; ***** SPI **************************
                                 ; SPDR - SPI Data Register
                                 .equ	SPDR0	= 0	; SPI Data Register bit 0
                                 .equ	SPDR1	= 1	; SPI Data Register bit 1
                                 .equ	SPDR2	= 2	; SPI Data Register bit 2
                                 .equ	SPDR3	= 3	; SPI Data Register bit 3
                                 .equ	SPDR4	= 4	; SPI Data Register bit 4
                                 .equ	SPDR5	= 5	; SPI Data Register bit 5
                                 .equ	SPDR6	= 6	; SPI Data Register bit 6
                                 .equ	SPDR7	= 7	; SPI Data Register bit 7
                                 
                                 ; SPSR - SPI Status Register
                                 .equ	SPI2X	= 0	; Double SPI Speed Bit
                                 .equ	WCOL	= 6	; Write Collision Flag
                                 .equ	SPIF	= 7	; SPI Interrupt Flag
                                 
                                 ; SPCR - SPI Control Register
                                 .equ	SPR0	= 0	; SPI Clock Rate Select 0
                                 .equ	SPR1	= 1	; SPI Clock Rate Select 1
                                 .equ	CPHA	= 2	; Clock Phase
                                 .equ	CPOL	= 3	; Clock polarity
                                 .equ	MSTR	= 4	; Master/Slave Select
                                 .equ	DORD	= 5	; Data Order
                                 .equ	SPE	= 6	; SPI Enable
                                 .equ	SPIE	= 7	; SPI Interrupt Enable
                                 
                                 
                                 ; ***** PORTA ************************
                                 ; PORTA - Port A Data Register
                                 .equ	PORTA0	= 0	; Port A Data Register bit 0
                                 .equ	PA0	= 0	; For compatibility
                                 .equ	PORTA1	= 1	; Port A Data Register bit 1
                                 .equ	PA1	= 1	; For compatibility
                                 .equ	PORTA2	= 2	; Port A Data Register bit 2
                                 .equ	PA2	= 2	; For compatibility
                                 .equ	PORTA3	= 3	; Port A Data Register bit 3
                                 .equ	PA3	= 3	; For compatibility
                                 .equ	PORTA4	= 4	; Port A Data Register bit 4
                                 .equ	PA4	= 4	; For compatibility
                                 .equ	PORTA5	= 5	; Port A Data Register bit 5
                                 .equ	PA5	= 5	; For compatibility
                                 .equ	PORTA6	= 6	; Port A Data Register bit 6
                                 .equ	PA6	= 6	; For compatibility
                                 .equ	PORTA7	= 7	; Port A Data Register bit 7
                                 .equ	PA7	= 7	; For compatibility
                                 
                                 ; DDRA - Port A Data Direction Register
                                 .equ	DDA0	= 0	; Data Direction Register, Port A, bit 0
                                 .equ	DDA1	= 1	; Data Direction Register, Port A, bit 1
                                 .equ	DDA2	= 2	; Data Direction Register, Port A, bit 2
                                 .equ	DDA3	= 3	; Data Direction Register, Port A, bit 3
                                 .equ	DDA4	= 4	; Data Direction Register, Port A, bit 4
                                 .equ	DDA5	= 5	; Data Direction Register, Port A, bit 5
                                 .equ	DDA6	= 6	; Data Direction Register, Port A, bit 6
                                 .equ	DDA7	= 7	; Data Direction Register, Port A, bit 7
                                 
                                 ; PINA - Port A Input Pins
                                 .equ	PINA0	= 0	; Input Pins, Port A bit 0
                                 .equ	PINA1	= 1	; Input Pins, Port A bit 1
                                 .equ	PINA2	= 2	; Input Pins, Port A bit 2
                                 .equ	PINA3	= 3	; Input Pins, Port A bit 3
                                 .equ	PINA4	= 4	; Input Pins, Port A bit 4
                                 .equ	PINA5	= 5	; Input Pins, Port A bit 5
                                 .equ	PINA6	= 6	; Input Pins, Port A bit 6
                                 .equ	PINA7	= 7	; Input Pins, Port A bit 7
                                 
                                 
                                 ; ***** PORTB ************************
                                 ; PORTB - Port B Data Register
                                 .equ	PORTB0	= 0	; Port B Data Register bit 0
                                 .equ	PB0	= 0	; For compatibility
                                 .equ	PORTB1	= 1	; Port B Data Register bit 1
                                 .equ	PB1	= 1	; For compatibility
                                 .equ	PORTB2	= 2	; Port B Data Register bit 2
                                 .equ	PB2	= 2	; For compatibility
                                 .equ	PORTB3	= 3	; Port B Data Register bit 3
                                 .equ	PB3	= 3	; For compatibility
                                 .equ	PORTB4	= 4	; Port B Data Register bit 4
                                 .equ	PB4	= 4	; For compatibility
                                 .equ	PORTB5	= 5	; Port B Data Register bit 5
                                 .equ	PB5	= 5	; For compatibility
                                 .equ	PORTB6	= 6	; Port B Data Register bit 6
                                 .equ	PB6	= 6	; For compatibility
                                 .equ	PORTB7	= 7	; Port B Data Register bit 7
                                 .equ	PB7	= 7	; For compatibility
                                 
                                 ; DDRB - Port B Data Direction Register
                                 .equ	DDB0	= 0	; Port B Data Direction Register bit 0
                                 .equ	DDB1	= 1	; Port B Data Direction Register bit 1
                                 .equ	DDB2	= 2	; Port B Data Direction Register bit 2
                                 .equ	DDB3	= 3	; Port B Data Direction Register bit 3
                                 .equ	DDB4	= 4	; Port B Data Direction Register bit 4
                                 .equ	DDB5	= 5	; Port B Data Direction Register bit 5
                                 .equ	DDB6	= 6	; Port B Data Direction Register bit 6
                                 .equ	DDB7	= 7	; Port B Data Direction Register bit 7
                                 
                                 ; PINB - Port B Input Pins
                                 .equ	PINB0	= 0	; Port B Input Pins bit 0
                                 .equ	PINB1	= 1	; Port B Input Pins bit 1
                                 .equ	PINB2	= 2	; Port B Input Pins bit 2
                                 .equ	PINB3	= 3	; Port B Input Pins bit 3
                                 .equ	PINB4	= 4	; Port B Input Pins bit 4
                                 .equ	PINB5	= 5	; Port B Input Pins bit 5
                                 .equ	PINB6	= 6	; Port B Input Pins bit 6
                                 .equ	PINB7	= 7	; Port B Input Pins bit 7
                                 
                                 
                                 ; ***** PORTC ************************
                                 ; PORTC - Port C Data Register
                                 .equ	PORTC0	= 0	; Port C Data Register bit 0
                                 .equ	PC0	= 0	; For compatibility
                                 .equ	PORTC1	= 1	; Port C Data Register bit 1
                                 .equ	PC1	= 1	; For compatibility
                                 .equ	PORTC2	= 2	; Port C Data Register bit 2
                                 .equ	PC2	= 2	; For compatibility
                                 .equ	PORTC3	= 3	; Port C Data Register bit 3
                                 .equ	PC3	= 3	; For compatibility
                                 .equ	PORTC4	= 4	; Port C Data Register bit 4
                                 .equ	PC4	= 4	; For compatibility
                                 .equ	PORTC5	= 5	; Port C Data Register bit 5
                                 .equ	PC5	= 5	; For compatibility
                                 .equ	PORTC6	= 6	; Port C Data Register bit 6
                                 .equ	PC6	= 6	; For compatibility
                                 .equ	PORTC7	= 7	; Port C Data Register bit 7
                                 .equ	PC7	= 7	; For compatibility
                                 
                                 ; DDRC - Port C Data Direction Register
                                 .equ	DDC0	= 0	; Port C Data Direction Register bit 0
                                 .equ	DDC1	= 1	; Port C Data Direction Register bit 1
                                 .equ	DDC2	= 2	; Port C Data Direction Register bit 2
                                 .equ	DDC3	= 3	; Port C Data Direction Register bit 3
                                 .equ	DDC4	= 4	; Port C Data Direction Register bit 4
                                 .equ	DDC5	= 5	; Port C Data Direction Register bit 5
                                 .equ	DDC6	= 6	; Port C Data Direction Register bit 6
                                 .equ	DDC7	= 7	; Port C Data Direction Register bit 7
                                 
                                 ; PINC - Port C Input Pins
                                 .equ	PINC0	= 0	; Port C Input Pins bit 0
                                 .equ	PINC1	= 1	; Port C Input Pins bit 1
                                 .equ	PINC2	= 2	; Port C Input Pins bit 2
                                 .equ	PINC3	= 3	; Port C Input Pins bit 3
                                 .equ	PINC4	= 4	; Port C Input Pins bit 4
                                 .equ	PINC5	= 5	; Port C Input Pins bit 5
                                 .equ	PINC6	= 6	; Port C Input Pins bit 6
                                 .equ	PINC7	= 7	; Port C Input Pins bit 7
                                 
                                 
                                 ; ***** PORTD ************************
                                 ; PORTD - Port D Data Register
                                 .equ	PORTD0	= 0	; Port D Data Register bit 0
                                 .equ	PD0	= 0	; For compatibility
                                 .equ	PORTD1	= 1	; Port D Data Register bit 1
                                 .equ	PD1	= 1	; For compatibility
                                 .equ	PORTD2	= 2	; Port D Data Register bit 2
                                 .equ	PD2	= 2	; For compatibility
                                 .equ	PORTD3	= 3	; Port D Data Register bit 3
                                 .equ	PD3	= 3	; For compatibility
                                 .equ	PORTD4	= 4	; Port D Data Register bit 4
                                 .equ	PD4	= 4	; For compatibility
                                 .equ	PORTD5	= 5	; Port D Data Register bit 5
                                 .equ	PD5	= 5	; For compatibility
                                 .equ	PORTD6	= 6	; Port D Data Register bit 6
                                 .equ	PD6	= 6	; For compatibility
                                 .equ	PORTD7	= 7	; Port D Data Register bit 7
                                 .equ	PD7	= 7	; For compatibility
                                 
                                 ; DDRD - Port D Data Direction Register
                                 .equ	DDD0	= 0	; Port D Data Direction Register bit 0
                                 .equ	DDD1	= 1	; Port D Data Direction Register bit 1
                                 .equ	DDD2	= 2	; Port D Data Direction Register bit 2
                                 .equ	DDD3	= 3	; Port D Data Direction Register bit 3
                                 .equ	DDD4	= 4	; Port D Data Direction Register bit 4
                                 .equ	DDD5	= 5	; Port D Data Direction Register bit 5
                                 .equ	DDD6	= 6	; Port D Data Direction Register bit 6
                                 .equ	DDD7	= 7	; Port D Data Direction Register bit 7
                                 
                                 ; PIND - Port D Input Pins
                                 .equ	PIND0	= 0	; Port D Input Pins bit 0
                                 .equ	PIND1	= 1	; Port D Input Pins bit 1
                                 .equ	PIND2	= 2	; Port D Input Pins bit 2
                                 .equ	PIND3	= 3	; Port D Input Pins bit 3
                                 .equ	PIND4	= 4	; Port D Input Pins bit 4
                                 .equ	PIND5	= 5	; Port D Input Pins bit 5
                                 .equ	PIND6	= 6	; Port D Input Pins bit 6
                                 .equ	PIND7	= 7	; Port D Input Pins bit 7
                                 
                                 
                                 ; ***** PORTE ************************
                                 ; PORTE - Data Register, Port E
                                 .equ	PORTE0	= 0	; 
                                 .equ	PE0	= 0	; For compatibility
                                 .equ	PORTE1	= 1	; 
                                 .equ	PE1	= 1	; For compatibility
                                 .equ	PORTE2	= 2	; 
                                 .equ	PE2	= 2	; For compatibility
                                 .equ	PORTE3	= 3	; 
                                 .equ	PE3	= 3	; For compatibility
                                 .equ	PORTE4	= 4	; 
                                 .equ	PE4	= 4	; For compatibility
                                 .equ	PORTE5	= 5	; 
                                 .equ	PE5	= 5	; For compatibility
                                 .equ	PORTE6	= 6	; 
                                 .equ	PE6	= 6	; For compatibility
                                 .equ	PORTE7	= 7	; 
                                 .equ	PE7	= 7	; For compatibility
                                 
                                 ; DDRE - Data Direction Register, Port E
                                 .equ	DDE0	= 0	; 
                                 .equ	DDE1	= 1	; 
                                 .equ	DDE2	= 2	; 
                                 .equ	DDE3	= 3	; 
                                 .equ	DDE4	= 4	; 
                                 .equ	DDE5	= 5	; 
                                 .equ	DDE6	= 6	; 
                                 .equ	DDE7	= 7	; 
                                 
                                 ; PINE - Input Pins, Port E
                                 .equ	PINE0	= 0	; 
                                 .equ	PINE1	= 1	; 
                                 .equ	PINE2	= 2	; 
                                 .equ	PINE3	= 3	; 
                                 .equ	PINE4	= 4	; 
                                 .equ	PINE5	= 5	; 
                                 .equ	PINE6	= 6	; 
                                 .equ	PINE7	= 7	; 
                                 
                                 
                                 ; ***** PORTF ************************
                                 ; PORTF - Data Register, Port F
                                 .equ	PORTF0	= 0	; 
                                 .equ	PF0	= 0	; For compatibility
                                 .equ	PORTF1	= 1	; 
                                 .equ	PF1	= 1	; For compatibility
                                 .equ	PORTF2	= 2	; 
                                 .equ	PF2	= 2	; For compatibility
                                 .equ	PORTF3	= 3	; 
                                 .equ	PF3	= 3	; For compatibility
                                 .equ	PORTF4	= 4	; 
                                 .equ	PF4	= 4	; For compatibility
                                 .equ	PORTF5	= 5	; 
                                 .equ	PF5	= 5	; For compatibility
                                 .equ	PORTF6	= 6	; 
                                 .equ	PF6	= 6	; For compatibility
                                 .equ	PORTF7	= 7	; 
                                 .equ	PF7	= 7	; For compatibility
                                 
                                 ; DDRF - Data Direction Register, Port F
                                 .equ	DDF0	= 0	; 
                                 .equ	DDF1	= 1	; 
                                 .equ	DDF2	= 2	; 
                                 .equ	DDF3	= 3	; 
                                 .equ	DDF4	= 4	; 
                                 .equ	DDF5	= 5	; 
                                 .equ	DDF6	= 6	; 
                                 .equ	DDF7	= 7	; 
                                 
                                 ; PINF - Input Pins, Port F
                                 .equ	PINF0	= 0	; 
                                 .equ	PINF1	= 1	; 
                                 .equ	PINF2	= 2	; 
                                 .equ	PINF3	= 3	; 
                                 .equ	PINF4	= 4	; 
                                 .equ	PINF5	= 5	; 
                                 .equ	PINF6	= 6	; 
                                 .equ	PINF7	= 7	; 
                                 
                                 
                                 ; ***** PORTG ************************
                                 ; PORTG - Data Register, Port G
                                 .equ	PORTG0	= 0	; 
                                 .equ	PG0	= 0	; For compatibility
                                 .equ	PORTG1	= 1	; 
                                 .equ	PG1	= 1	; For compatibility
                                 .equ	PORTG2	= 2	; 
                                 .equ	PG2	= 2	; For compatibility
                                 .equ	PORTG3	= 3	; 
                                 .equ	PG3	= 3	; For compatibility
                                 .equ	PORTG4	= 4	; 
                                 .equ	PG4	= 4	; For compatibility
                                 .equ	PORTG5	= 5	; 
                                 .equ	PG5	= 5	; For compatibility
                                 
                                 ; DDRG - Data Direction Register, Port G
                                 .equ	DDG0	= 0	; 
                                 .equ	DDG1	= 1	; 
                                 .equ	DDG2	= 2	; 
                                 .equ	DDG3	= 3	; 
                                 .equ	DDG4	= 4	; 
                                 .equ	DDG5	= 5	; 
                                 
                                 ; PING - Input Pins, Port G
                                 .equ	PING0	= 0	; 
                                 .equ	PING1	= 1	; 
                                 .equ	PING2	= 2	; 
                                 .equ	PING3	= 3	; 
                                 .equ	PING4	= 4	; 
                                 .equ	PING5	= 5	; 
                                 
                                 
                                 ; ***** PORTH ************************
                                 ; PORTH - PORT H Data Register
                                 .equ	PORTH0	= 0	; PORT H Data Register bit 0
                                 .equ	PH0	= 0	; For compatibility
                                 .equ	PORTH1	= 1	; PORT H Data Register bit 1
                                 .equ	PH1	= 1	; For compatibility
                                 .equ	PORTH2	= 2	; PORT H Data Register bit 2
                                 .equ	PH2	= 2	; For compatibility
                                 .equ	PORTH3	= 3	; PORT H Data Register bit 3
                                 .equ	PH3	= 3	; For compatibility
                                 .equ	PORTH4	= 4	; PORT H Data Register bit 4
                                 .equ	PH4	= 4	; For compatibility
                                 .equ	PORTH5	= 5	; PORT H Data Register bit 5
                                 .equ	PH5	= 5	; For compatibility
                                 .equ	PORTH6	= 6	; PORT H Data Register bit 6
                                 .equ	PH6	= 6	; For compatibility
                                 .equ	PORTH7	= 7	; PORT H Data Register bit 7
                                 .equ	PH7	= 7	; For compatibility
                                 
                                 ; DDRH - PORT H Data Direction Register
                                 .equ	DDH0	= 0	; PORT H Data Direction Register bit 0
                                 .equ	DDH1	= 1	; PORT H Data Direction Register bit 1
                                 .equ	DDH2	= 2	; PORT H Data Direction Register bit 2
                                 .equ	DDH3	= 3	; PORT H Data Direction Register bit 3
                                 .equ	DDH4	= 4	; PORT H Data Direction Register bit 4
                                 .equ	DDH5	= 5	; PORT H Data Direction Register bit 5
                                 .equ	DDH6	= 6	; PORT H Data Direction Register bit 6
                                 .equ	DDH7	= 7	; PORT H Data Direction Register bit 7
                                 
                                 ; PINH - PORT H Input Pins
                                 .equ	PINH0	= 0	; PORT H Input Pins bit 0
                                 .equ	PINH1	= 1	; PORT H Input Pins bit 1
                                 .equ	PINH2	= 2	; PORT H Input Pins bit 2
                                 .equ	PINH3	= 3	; PORT H Input Pins bit 3
                                 .equ	PINH4	= 4	; PORT H Input Pins bit 4
                                 .equ	PINH5	= 5	; PORT H Input Pins bit 5
                                 .equ	PINH6	= 6	; PORT H Input Pins bit 6
                                 .equ	PINH7	= 7	; PORT H Input Pins bit 7
                                 
                                 
                                 ; ***** PORTJ ************************
                                 ; PORTJ - PORT J Data Register
                                 .equ	PORTJ0	= 0	; PORT J Data Register bit 0
                                 .equ	PJ0	= 0	; For compatibility
                                 .equ	PORTJ1	= 1	; PORT J Data Register bit 1
                                 .equ	PJ1	= 1	; For compatibility
                                 .equ	PORTJ2	= 2	; PORT J Data Register bit 2
                                 .equ	PJ2	= 2	; For compatibility
                                 .equ	PORTJ3	= 3	; PORT J Data Register bit 3
                                 .equ	PJ3	= 3	; For compatibility
                                 .equ	PORTJ4	= 4	; PORT J Data Register bit 4
                                 .equ	PJ4	= 4	; For compatibility
                                 .equ	PORTJ5	= 5	; PORT J Data Register bit 5
                                 .equ	PJ5	= 5	; For compatibility
                                 .equ	PORTJ6	= 6	; PORT J Data Register bit 6
                                 .equ	PJ6	= 6	; For compatibility
                                 .equ	PORTJ7	= 7	; PORT J Data Register bit 7
                                 .equ	PJ7	= 7	; For compatibility
                                 
                                 ; DDRJ - PORT J Data Direction Register
                                 .equ	DDJ0	= 0	; PORT J Data Direction Register bit 0
                                 .equ	DDJ1	= 1	; PORT J Data Direction Register bit 1
                                 .equ	DDJ2	= 2	; PORT J Data Direction Register bit 2
                                 .equ	DDJ3	= 3	; PORT J Data Direction Register bit 3
                                 .equ	DDJ4	= 4	; PORT J Data Direction Register bit 4
                                 .equ	DDJ5	= 5	; PORT J Data Direction Register bit 5
                                 .equ	DDJ6	= 6	; PORT J Data Direction Register bit 6
                                 .equ	DDJ7	= 7	; PORT J Data Direction Register bit 7
                                 
                                 ; PINJ - PORT J Input Pins
                                 .equ	PINJ0	= 0	; PORT J Input Pins bit 0
                                 .equ	PINJ1	= 1	; PORT J Input Pins bit 1
                                 .equ	PINJ2	= 2	; PORT J Input Pins bit 2
                                 .equ	PINJ3	= 3	; PORT J Input Pins bit 3
                                 .equ	PINJ4	= 4	; PORT J Input Pins bit 4
                                 .equ	PINJ5	= 5	; PORT J Input Pins bit 5
                                 .equ	PINJ6	= 6	; PORT J Input Pins bit 6
                                 .equ	PINJ7	= 7	; PORT J Input Pins bit 7
                                 
                                 
                                 ; ***** PORTK ************************
                                 ; PORTK - PORT K Data Register
                                 .equ	PORTK0	= 0	; PORT K Data Register bit 0
                                 .equ	PK0	= 0	; For compatibility
                                 .equ	PORTK1	= 1	; PORT K Data Register bit 1
                                 .equ	PK1	= 1	; For compatibility
                                 .equ	PORTK2	= 2	; PORT K Data Register bit 2
                                 .equ	PK2	= 2	; For compatibility
                                 .equ	PORTK3	= 3	; PORT K Data Register bit 3
                                 .equ	PK3	= 3	; For compatibility
                                 .equ	PORTK4	= 4	; PORT K Data Register bit 4
                                 .equ	PK4	= 4	; For compatibility
                                 .equ	PORTK5	= 5	; PORT K Data Register bit 5
                                 .equ	PK5	= 5	; For compatibility
                                 .equ	PORTK6	= 6	; PORT K Data Register bit 6
                                 .equ	PK6	= 6	; For compatibility
                                 .equ	PORTK7	= 7	; PORT K Data Register bit 7
                                 .equ	PK7	= 7	; For compatibility
                                 
                                 ; DDRK - PORT K Data Direction Register
                                 .equ	DDK0	= 0	; PORT K Data Direction Register bit 0
                                 .equ	DDK1	= 1	; PORT K Data Direction Register bit 1
                                 .equ	DDK2	= 2	; PORT K Data Direction Register bit 2
                                 .equ	DDK3	= 3	; PORT K Data Direction Register bit 3
                                 .equ	DDK4	= 4	; PORT K Data Direction Register bit 4
                                 .equ	DDK5	= 5	; PORT K Data Direction Register bit 5
                                 .equ	DDK6	= 6	; PORT K Data Direction Register bit 6
                                 .equ	DDK7	= 7	; PORT K Data Direction Register bit 7
                                 
                                 ; PINK - PORT K Input Pins
                                 .equ	PINK0	= 0	; PORT K Input Pins bit 0
                                 .equ	PINK1	= 1	; PORT K Input Pins bit 1
                                 .equ	PINK2	= 2	; PORT K Input Pins bit 2
                                 .equ	PINK3	= 3	; PORT K Input Pins bit 3
                                 .equ	PINK4	= 4	; PORT K Input Pins bit 4
                                 .equ	PINK5	= 5	; PORT K Input Pins bit 5
                                 .equ	PINK6	= 6	; PORT K Input Pins bit 6
                                 .equ	PINK7	= 7	; PORT K Input Pins bit 7
                                 
                                 
                                 ; ***** PORTL ************************
                                 ; PORTL - PORT L Data Register
                                 .equ	PORTL0	= 0	; PORT L Data Register bit 0
                                 .equ	PL0	= 0	; For compatibility
                                 .equ	PORTL1	= 1	; PORT L Data Register bit 1
                                 .equ	PL1	= 1	; For compatibility
                                 .equ	PORTL2	= 2	; PORT L Data Register bit 2
                                 .equ	PL2	= 2	; For compatibility
                                 .equ	PORTL3	= 3	; PORT L Data Register bit 3
                                 .equ	PL3	= 3	; For compatibility
                                 .equ	PORTL4	= 4	; PORT L Data Register bit 4
                                 .equ	PL4	= 4	; For compatibility
                                 .equ	PORTL5	= 5	; PORT L Data Register bit 5
                                 .equ	PL5	= 5	; For compatibility
                                 .equ	PORTL6	= 6	; PORT L Data Register bit 6
                                 .equ	PL6	= 6	; For compatibility
                                 .equ	PORTL7	= 7	; PORT L Data Register bit 7
                                 .equ	PL7	= 7	; For compatibility
                                 
                                 ; DDRL - PORT L Data Direction Register
                                 .equ	DDL0	= 0	; PORT L Data Direction Register bit 0
                                 .equ	DDL1	= 1	; PORT L Data Direction Register bit 1
                                 .equ	DDL2	= 2	; PORT L Data Direction Register bit 2
                                 .equ	DDL3	= 3	; PORT L Data Direction Register bit 3
                                 .equ	DDL4	= 4	; PORT L Data Direction Register bit 4
                                 .equ	DDL5	= 5	; PORT L Data Direction Register bit 5
                                 .equ	DDL6	= 6	; PORT L Data Direction Register bit 6
                                 .equ	DDL7	= 7	; PORT L Data Direction Register bit 7
                                 
                                 ; PINL - PORT L Input Pins
                                 .equ	PINL0	= 0	; PORT L Input Pins bit 0
                                 .equ	PINL1	= 1	; PORT L Input Pins bit 1
                                 .equ	PINL2	= 2	; PORT L Input Pins bit 2
                                 .equ	PINL3	= 3	; PORT L Input Pins bit 3
                                 .equ	PINL4	= 4	; PORT L Input Pins bit 4
                                 .equ	PINL5	= 5	; PORT L Input Pins bit 5
                                 .equ	PINL6	= 6	; PORT L Input Pins bit 6
                                 .equ	PINL7	= 7	; PORT L Input Pins bit 7
                                 
                                 
                                 ; ***** TIMER_COUNTER_0 **************
                                 ; TIMSK0 - Timer/Counter0 Interrupt Mask Register
                                 .equ	TOIE0	= 0	; Timer/Counter0 Overflow Interrupt Enable
                                 .equ	OCIE0A	= 1	; Timer/Counter0 Output Compare Match A Interrupt Enable
                                 .equ	OCIE0B	= 2	; Timer/Counter0 Output Compare Match B Interrupt Enable
                                 
                                 ; TIFR0 - Timer/Counter0 Interrupt Flag register
                                 .equ	TOV0	= 0	; Timer/Counter0 Overflow Flag
                                 .equ	OCF0A	= 1	; Timer/Counter0 Output Compare Flag 0A
                                 .equ	OCF0B	= 2	; Timer/Counter0 Output Compare Flag 0B
                                 
                                 ; TCCR0A - Timer/Counter  Control Register A
                                 .equ	WGM00	= 0	; Waveform Generation Mode
                                 .equ	WGM01	= 1	; Waveform Generation Mode
                                 .equ	COM0B0	= 4	; Compare Output Mode, Fast PWm
                                 .equ	COM0B1	= 5	; Compare Output Mode, Fast PWm
                                 .equ	COM0A0	= 6	; Compare Output Mode, Phase Correct PWM Mode
                                 .equ	COM0A1	= 7	; Compare Output Mode, Phase Correct PWM Mode
                                 
                                 ; TCCR0B - Timer/Counter Control Register B
                                 .equ	CS00	= 0	; Clock Select
                                 .equ	CS01	= 1	; Clock Select
                                 .equ	CS02	= 2	; Clock Select
                                 .equ	WGM02	= 3	; 
                                 .equ	FOC0B	= 6	; Force Output Compare B
                                 .equ	FOC0A	= 7	; Force Output Compare A
                                 
                                 ; TCNT0 - Timer/Counter0
                                 .equ	TCNT0_0	= 0	; 
                                 .equ	TCNT0_1	= 1	; 
                                 .equ	TCNT0_2	= 2	; 
                                 .equ	TCNT0_3	= 3	; 
                                 .equ	TCNT0_4	= 4	; 
                                 .equ	TCNT0_5	= 5	; 
                                 .equ	TCNT0_6	= 6	; 
                                 .equ	TCNT0_7	= 7	; 
                                 
                                 ; OCR0A - Timer/Counter0 Output Compare Register
                                 .equ	OCR0A_0	= 0	; 
                                 .equ	OCR0A_1	= 1	; 
                                 .equ	OCR0A_2	= 2	; 
                                 .equ	OCR0A_3	= 3	; 
                                 .equ	OCR0A_4	= 4	; 
                                 .equ	OCR0A_5	= 5	; 
                                 .equ	OCR0A_6	= 6	; 
                                 .equ	OCR0A_7	= 7	; 
                                 
                                 ; OCR0B - Timer/Counter0 Output Compare Register
                                 .equ	OCR0B_0	= 0	; 
                                 .equ	OCR0B_1	= 1	; 
                                 .equ	OCR0B_2	= 2	; 
                                 .equ	OCR0B_3	= 3	; 
                                 .equ	OCR0B_4	= 4	; 
                                 .equ	OCR0B_5	= 5	; 
                                 .equ	OCR0B_6	= 6	; 
                                 .equ	OCR0B_7	= 7	; 
                                 
                                 ; GTCCR - General Timer/Counter Control Register
                                 .equ	PSRSYNC	= 0	; Prescaler Reset Timer/Counter1 and Timer/Counter0
                                 .equ	PSR10	= PSRSYNC	; For compatibility
                                 .equ	TSM	= 7	; Timer/Counter Synchronization Mode
                                 
                                 
                                 ; ***** TIMER_COUNTER_2 **************
                                 ; TIMSK2 - Timer/Counter Interrupt Mask register
                                 .equ	TOIE2	= 0	; Timer/Counter2 Overflow Interrupt Enable
                                 .equ	TOIE2A	= TOIE2	; For compatibility
                                 .equ	OCIE2A	= 1	; Timer/Counter2 Output Compare Match A Interrupt Enable
                                 .equ	OCIE2B	= 2	; Timer/Counter2 Output Compare Match B Interrupt Enable
                                 
                                 ; TIFR2 - Timer/Counter Interrupt Flag Register
                                 .equ	TOV2	= 0	; Timer/Counter2 Overflow Flag
                                 .equ	OCF2A	= 1	; Output Compare Flag 2A
                                 .equ	OCF2B	= 2	; Output Compare Flag 2B
                                 
                                 ; TCCR2A - Timer/Counter2 Control Register A
                                 .equ	WGM20	= 0	; Waveform Genration Mode
                                 .equ	WGM21	= 1	; Waveform Genration Mode
                                 .equ	COM2B0	= 4	; Compare Output Mode bit 0
                                 .equ	COM2B1	= 5	; Compare Output Mode bit 1
                                 .equ	COM2A0	= 6	; Compare Output Mode bit 1
                                 .equ	COM2A1	= 7	; Compare Output Mode bit 1
                                 
                                 ; TCCR2B - Timer/Counter2 Control Register B
                                 .equ	CS20	= 0	; Clock Select bit 0
                                 .equ	CS21	= 1	; Clock Select bit 1
                                 .equ	CS22	= 2	; Clock Select bit 2
                                 .equ	WGM22	= 3	; Waveform Generation Mode
                                 .equ	FOC2B	= 6	; Force Output Compare B
                                 .equ	FOC2A	= 7	; Force Output Compare A
                                 
                                 ; TCNT2 - Timer/Counter2
                                 .equ	TCNT2_0	= 0	; Timer/Counter 2 bit 0
                                 .equ	TCNT2_1	= 1	; Timer/Counter 2 bit 1
                                 .equ	TCNT2_2	= 2	; Timer/Counter 2 bit 2
                                 .equ	TCNT2_3	= 3	; Timer/Counter 2 bit 3
                                 .equ	TCNT2_4	= 4	; Timer/Counter 2 bit 4
                                 .equ	TCNT2_5	= 5	; Timer/Counter 2 bit 5
                                 .equ	TCNT2_6	= 6	; Timer/Counter 2 bit 6
                                 .equ	TCNT2_7	= 7	; Timer/Counter 2 bit 7
                                 
                                 ; OCR2A - Timer/Counter2 Output Compare Register A
                                 .equ	OCR2A_0	= 0	; Timer/Counter2 Output Compare Register Bit 0
                                 .equ	OCR2A_1	= 1	; Timer/Counter2 Output Compare Register Bit 1
                                 .equ	OCR2A_2	= 2	; Timer/Counter2 Output Compare Register Bit 2
                                 .equ	OCR2A_3	= 3	; Timer/Counter2 Output Compare Register Bit 3
                                 .equ	OCR2A_4	= 4	; Timer/Counter2 Output Compare Register Bit 4
                                 .equ	OCR2A_5	= 5	; Timer/Counter2 Output Compare Register Bit 5
                                 .equ	OCR2A_6	= 6	; Timer/Counter2 Output Compare Register Bit 6
                                 .equ	OCR2A_7	= 7	; Timer/Counter2 Output Compare Register Bit 7
                                 
                                 ; OCR2B - Timer/Counter2 Output Compare Register B
                                 .equ	OCR2B_0	= 0	; Timer/Counter2 Output Compare Register Bit 0
                                 .equ	OCR2B_1	= 1	; Timer/Counter2 Output Compare Register Bit 1
                                 .equ	OCR2B_2	= 2	; Timer/Counter2 Output Compare Register Bit 2
                                 .equ	OCR2B_3	= 3	; Timer/Counter2 Output Compare Register Bit 3
                                 .equ	OCR2B_4	= 4	; Timer/Counter2 Output Compare Register Bit 4
                                 .equ	OCR2B_5	= 5	; Timer/Counter2 Output Compare Register Bit 5
                                 .equ	OCR2B_6	= 6	; Timer/Counter2 Output Compare Register Bit 6
                                 .equ	OCR2B_7	= 7	; Timer/Counter2 Output Compare Register Bit 7
                                 
                                 ; ASSR - Asynchronous Status Register
                                 .equ	TCR2BUB	= 0	; Timer/Counter Control Register2 Update Busy
                                 .equ	TCR2AUB	= 1	; Timer/Counter Control Register2 Update Busy
                                 .equ	OCR2BUB	= 2	; Output Compare Register 2 Update Busy
                                 .equ	OCR2AUB	= 3	; Output Compare Register2 Update Busy
                                 .equ	TCN2UB	= 4	; Timer/Counter2 Update Busy
                                 .equ	AS2	= 5	; Asynchronous Timer/Counter2
                                 .equ	EXCLK	= 6	; Enable External Clock Input
                                 
                                 ; GTCCR - General Timer Counter Control register
                                 .equ	PSRASY	= 1	; Prescaler Reset Timer/Counter2
                                 .equ	PSR2	= PSRASY	; For compatibility
                                 ;.equ	TSM	= 7	; Timer/Counter Synchronization Mode
                                 
                                 
                                 ; ***** WATCHDOG *********************
                                 ; WDTCSR - Watchdog Timer Control Register
                                 .equ	WDP0	= 0	; Watch Dog Timer Prescaler bit 0
                                 .equ	WDP1	= 1	; Watch Dog Timer Prescaler bit 1
                                 .equ	WDP2	= 2	; Watch Dog Timer Prescaler bit 2
                                 .equ	WDE	= 3	; Watch Dog Enable
                                 .equ	WDCE	= 4	; Watchdog Change Enable
                                 .equ	WDP3	= 5	; Watchdog Timer Prescaler Bit 3
                                 .equ	WDIE	= 6	; Watchdog Timeout Interrupt Enable
                                 .equ	WDIF	= 7	; Watchdog Timeout Interrupt Flag
                                 
                                 
                                 ; ***** USART1 ***********************
                                 ; UDR1 - USART I/O Data Register
                                 .equ	UDR1_0	= 0	; USART I/O Data Register bit 0
                                 .equ	UDR1_1	= 1	; USART I/O Data Register bit 1
                                 .equ	UDR1_2	= 2	; USART I/O Data Register bit 2
                                 .equ	UDR1_3	= 3	; USART I/O Data Register bit 3
                                 .equ	UDR1_4	= 4	; USART I/O Data Register bit 4
                                 .equ	UDR1_5	= 5	; USART I/O Data Register bit 5
                                 .equ	UDR1_6	= 6	; USART I/O Data Register bit 6
                                 .equ	UDR1_7	= 7	; USART I/O Data Register bit 7
                                 
                                 ; UCSR1A - USART Control and Status Register A
                                 .equ	MPCM1	= 0	; Multi-processor Communication Mode
                                 .equ	U2X1	= 1	; Double the USART transmission speed
                                 .equ	UPE1	= 2	; Parity Error
                                 .equ	DOR1	= 3	; Data overRun
                                 .equ	FE1	= 4	; Framing Error
                                 .equ	UDRE1	= 5	; USART Data Register Empty
                                 .equ	TXC1	= 6	; USART Transmitt Complete
                                 .equ	RXC1	= 7	; USART Receive Complete
                                 
                                 ; UCSR1B - USART Control and Status Register B
                                 .equ	TXB81	= 0	; Transmit Data Bit 8
                                 .equ	RXB81	= 1	; Receive Data Bit 8
                                 .equ	UCSZ12	= 2	; Character Size
                                 .equ	TXEN1	= 3	; Transmitter Enable
                                 .equ	RXEN1	= 4	; Receiver Enable
                                 .equ	UDRIE1	= 5	; USART Data register Empty Interrupt Enable
                                 .equ	TXCIE1	= 6	; TX Complete Interrupt Enable
                                 .equ	RXCIE1	= 7	; RX Complete Interrupt Enable
                                 
                                 ; UCSR1C - USART Control and Status Register C
                                 .equ	UCPOL1	= 0	; Clock Polarity
                                 .equ	UCSZ10	= 1	; Character Size
                                 .equ	UCPHA1	= UCSZ10	; For compatibility
                                 .equ	UCSZ11	= 2	; Character Size
                                 .equ	UDORD1	= UCSZ11	; For compatibility
                                 .equ	USBS1	= 3	; Stop Bit Select
                                 .equ	UPM10	= 4	; Parity Mode Bit 0
                                 .equ	UPM11	= 5	; Parity Mode Bit 1
                                 .equ	UMSEL10	= 6	; USART Mode Select
                                 .equ	UMSEL11	= 7	; USART Mode Select
                                 
                                 ; UBRR1H - USART Baud Rate Register High Byte
                                 .equ	UBRR_8	= 0	; USART Baud Rate Register bit 8
                                 .equ	UBRR_9	= 1	; USART Baud Rate Register bit 9
                                 .equ	UBRR_10	= 2	; USART Baud Rate Register bit 10
                                 .equ	UBRR_11	= 3	; USART Baud Rate Register bit 11
                                 
                                 ; UBRR1L - USART Baud Rate Register Low Byte
                                 .equ	UBRR_0	= 0	; USART Baud Rate Register bit 0
                                 .equ	UBRR_1	= 1	; USART Baud Rate Register bit 1
                                 .equ	UBRR_2	= 2	; USART Baud Rate Register bit 2
                                 .equ	UBRR_3	= 3	; USART Baud Rate Register bit 3
                                 .equ	UBRR_4	= 4	; USART Baud Rate Register bit 4
                                 .equ	UBRR_5	= 5	; USART Baud Rate Register bit 5
                                 .equ	UBRR_6	= 6	; USART Baud Rate Register bit 6
                                 .equ	UBRR_7	= 7	; USART Baud Rate Register bit 7
                                 
                                 
                                 ; ***** EEPROM ***********************
                                 ; EEARH - EEPROM Address Register Low Byte
                                 .equ	EEAR8	= 0	; EEPROM Read/Write Access Bit 8
                                 .equ	EEAR9	= 1	; EEPROM Read/Write Access Bit 9
                                 .equ	EEAR10	= 2	; EEPROM Read/Write Access Bit 10
                                 .equ	EEAR11	= 3	; EEPROM Read/Write Access Bit 11
                                 
                                 ; EEARL - EEPROM Address Register Low Byte
                                 .equ	EEAR0	= 0	; EEPROM Read/Write Access Bit 0
                                 .equ	EEAR1	= 1	; EEPROM Read/Write Access Bit 1
                                 .equ	EEAR2	= 2	; EEPROM Read/Write Access Bit 2
                                 .equ	EEAR3	= 3	; EEPROM Read/Write Access Bit 3
                                 .equ	EEAR4	= 4	; EEPROM Read/Write Access Bit 4
                                 .equ	EEAR5	= 5	; EEPROM Read/Write Access Bit 5
                                 .equ	EEAR6	= 6	; EEPROM Read/Write Access Bit 6
                                 .equ	EEAR7	= 7	; EEPROM Read/Write Access Bit 7
                                 
                                 ; EEDR - EEPROM Data Register
                                 .equ	EEDR0	= 0	; EEPROM Data Register bit 0
                                 .equ	EEDR1	= 1	; EEPROM Data Register bit 1
                                 .equ	EEDR2	= 2	; EEPROM Data Register bit 2
                                 .equ	EEDR3	= 3	; EEPROM Data Register bit 3
                                 .equ	EEDR4	= 4	; EEPROM Data Register bit 4
                                 .equ	EEDR5	= 5	; EEPROM Data Register bit 5
                                 .equ	EEDR6	= 6	; EEPROM Data Register bit 6
                                 .equ	EEDR7	= 7	; EEPROM Data Register bit 7
                                 
                                 ; EECR - EEPROM Control Register
                                 .equ	EERE	= 0	; EEPROM Read Enable
                                 .equ	EEPE	= 1	; EEPROM Write Enable
                                 .equ	EEMPE	= 2	; EEPROM Master Write Enable
                                 .equ	EERIE	= 3	; EEPROM Ready Interrupt Enable
                                 .equ	EEPM0	= 4	; EEPROM Programming Mode Bit 0
                                 .equ	EEPM1	= 5	; EEPROM Programming Mode Bit 1
                                 
                                 
                                 ; ***** TIMER_COUNTER_5 **************
                                 ; TIMSK5 - Timer/Counter5 Interrupt Mask Register
                                 .equ	TOIE5	= 0	; Timer/Counter5 Overflow Interrupt Enable
                                 .equ	OCIE5A	= 1	; Timer/Counter5 Output Compare A Match Interrupt Enable
                                 .equ	OCIE5B	= 2	; Timer/Counter5 Output Compare B Match Interrupt Enable
                                 .equ	OCIE5C	= 3	; Timer/Counter5 Output Compare C Match Interrupt Enable
                                 .equ	ICIE5	= 5	; Timer/Counter5 Input Capture Interrupt Enable
                                 
                                 ; TIFR5 - Timer/Counter5 Interrupt Flag register
                                 .equ	TOV5	= 0	; Timer/Counter5 Overflow Flag
                                 .equ	OCF5A	= 1	; Output Compare Flag 5A
                                 .equ	OCF5B	= 2	; Output Compare Flag 5B
                                 .equ	OCF5C	= 3	; Output Compare Flag 5C
                                 .equ	ICF5	= 5	; Input Capture Flag 5
                                 
                                 ; TCCR5A - Timer/Counter5 Control Register A
                                 .equ	WGM50	= 0	; Waveform Generation Mode
                                 .equ	WGM51	= 1	; Waveform Generation Mode
                                 .equ	COM5C0	= 2	; Compare Output Mode 5C, bit 0
                                 .equ	COM5C1	= 3	; Compare Output Mode 5C, bit 1
                                 .equ	COM5B0	= 4	; Compare Output Mode 5B, bit 0
                                 .equ	COM5B1	= 5	; Compare Output Mode 5B, bit 1
                                 .equ	COM5A0	= 6	; Compare Output Mode 5A, bit 0
                                 .equ	COM5A1	= 7	; Compare Output Mode 1A, bit 1
                                 
                                 ; TCCR5B - Timer/Counter5 Control Register B
                                 .equ	CS50	= 0	; Prescaler source of Timer/Counter 5
                                 .equ	CS51	= 1	; Prescaler source of Timer/Counter 5
                                 .equ	CS52	= 2	; Prescaler source of Timer/Counter 5
                                 .equ	WGM52	= 3	; Waveform Generation Mode
                                 .equ	WGM53	= 4	; Waveform Generation Mode
                                 .equ	ICES5	= 6	; Input Capture 5 Edge Select
                                 .equ	ICNC5	= 7	; Input Capture 5 Noise Canceler
                                 
                                 ; TCCR5C - Timer/Counter 5 Control Register C
                                 .equ	FOC5C	= 5	; Force Output Compare 5C
                                 .equ	FOC5B	= 6	; Force Output Compare 5B
                                 .equ	FOC5A	= 7	; Force Output Compare 5A
                                 
                                 ; ICR5H - Timer/Counter5 Input Capture Register High Byte
                                 .equ	ICR5H0	= 0	; Timer/Counter5 Input Capture Register High Byte bit 0
                                 .equ	ICR5H1	= 1	; Timer/Counter5 Input Capture Register High Byte bit 1
                                 .equ	ICR5H2	= 2	; Timer/Counter5 Input Capture Register High Byte bit 2
                                 .equ	ICR5H3	= 3	; Timer/Counter5 Input Capture Register High Byte bit 3
                                 .equ	ICR5H4	= 4	; Timer/Counter5 Input Capture Register High Byte bit 4
                                 .equ	ICR5H5	= 5	; Timer/Counter5 Input Capture Register High Byte bit 5
                                 .equ	ICR5H6	= 6	; Timer/Counter5 Input Capture Register High Byte bit 6
                                 .equ	ICR5H7	= 7	; Timer/Counter5 Input Capture Register High Byte bit 7
                                 
                                 ; ICR5L - Timer/Counter5 Input Capture Register Low Byte
                                 .equ	ICR5L0	= 0	; Timer/Counter5 Input Capture Register Low Byte bit 0
                                 .equ	ICR5L1	= 1	; Timer/Counter5 Input Capture Register Low Byte bit 1
                                 .equ	ICR5L2	= 2	; Timer/Counter5 Input Capture Register Low Byte bit 2
                                 .equ	ICR5L3	= 3	; Timer/Counter5 Input Capture Register Low Byte bit 3
                                 .equ	ICR5L4	= 4	; Timer/Counter5 Input Capture Register Low Byte bit 4
                                 .equ	ICR5L5	= 5	; Timer/Counter5 Input Capture Register Low Byte bit 5
                                 .equ	ICR5L6	= 6	; Timer/Counter5 Input Capture Register Low Byte bit 6
                                 .equ	ICR5L7	= 7	; Timer/Counter5 Input Capture Register Low Byte bit 7
                                 
                                 
                                 ; ***** TIMER_COUNTER_4 **************
                                 ; TIMSK4 - Timer/Counter4 Interrupt Mask Register
                                 .equ	TOIE4	= 0	; Timer/Counter4 Overflow Interrupt Enable
                                 .equ	OCIE4A	= 1	; Timer/Counter4 Output Compare A Match Interrupt Enable
                                 .equ	OCIE4B	= 2	; Timer/Counter4 Output Compare B Match Interrupt Enable
                                 .equ	OCIE4C	= 3	; Timer/Counter4 Output Compare C Match Interrupt Enable
                                 .equ	ICIE4	= 5	; Timer/Counter4 Input Capture Interrupt Enable
                                 
                                 ; TIFR4 - Timer/Counter4 Interrupt Flag register
                                 .equ	TOV4	= 0	; Timer/Counter4 Overflow Flag
                                 .equ	OCF4A	= 1	; Output Compare Flag 4A
                                 .equ	OCF4B	= 2	; Output Compare Flag 4B
                                 .equ	OCF4C	= 3	; Output Compare Flag 4C
                                 .equ	ICF4	= 5	; Input Capture Flag 4
                                 
                                 ; TCCR4A - Timer/Counter4 Control Register A
                                 .equ	WGM40	= 0	; Waveform Generation Mode
                                 .equ	WGM41	= 1	; Waveform Generation Mode
                                 .equ	COM4C0	= 2	; Compare Output Mode 4C, bit 0
                                 .equ	COM4C1	= 3	; Compare Output Mode 4C, bit 1
                                 .equ	COM4B0	= 4	; Compare Output Mode 4B, bit 0
                                 .equ	COM4B1	= 5	; Compare Output Mode 4B, bit 1
                                 .equ	COM4A0	= 6	; Compare Output Mode 4A, bit 0
                                 .equ	COM4A1	= 7	; Compare Output Mode 1A, bit 1
                                 
                                 ; TCCR4B - Timer/Counter4 Control Register B
                                 .equ	CS40	= 0	; Prescaler source of Timer/Counter 4
                                 .equ	CS41	= 1	; Prescaler source of Timer/Counter 4
                                 .equ	CS42	= 2	; Prescaler source of Timer/Counter 4
                                 .equ	WGM42	= 3	; Waveform Generation Mode
                                 .equ	WGM43	= 4	; Waveform Generation Mode
                                 .equ	ICES4	= 6	; Input Capture 4 Edge Select
                                 .equ	ICNC4	= 7	; Input Capture 4 Noise Canceler
                                 
                                 ; TCCR4C - Timer/Counter 4 Control Register C
                                 .equ	FOC4C	= 5	; Force Output Compare 4C
                                 .equ	FOC4B	= 6	; Force Output Compare 4B
                                 .equ	FOC4A	= 7	; Force Output Compare 4A
                                 
                                 
                                 ; ***** TIMER_COUNTER_3 **************
                                 ; TIMSK3 - Timer/Counter3 Interrupt Mask Register
                                 .equ	TOIE3	= 0	; Timer/Counter3 Overflow Interrupt Enable
                                 .equ	OCIE3A	= 1	; Timer/Counter3 Output Compare A Match Interrupt Enable
                                 .equ	OCIE3B	= 2	; Timer/Counter3 Output Compare B Match Interrupt Enable
                                 .equ	OCIE3C	= 3	; Timer/Counter3 Output Compare C Match Interrupt Enable
                                 .equ	ICIE3	= 5	; Timer/Counter3 Input Capture Interrupt Enable
                                 
                                 ; TIFR3 - Timer/Counter3 Interrupt Flag register
                                 .equ	TOV3	= 0	; Timer/Counter3 Overflow Flag
                                 .equ	OCF3A	= 1	; Output Compare Flag 3A
                                 .equ	OCF3B	= 2	; Output Compare Flag 3B
                                 .equ	OCF3C	= 3	; Output Compare Flag 3C
                                 .equ	ICF3	= 5	; Input Capture Flag 3
                                 
                                 ; TCCR3A - Timer/Counter3 Control Register A
                                 .equ	WGM30	= 0	; Waveform Generation Mode
                                 .equ	WGM31	= 1	; Waveform Generation Mode
                                 .equ	COM3C0	= 2	; Compare Output Mode 3C, bit 0
                                 .equ	COM3C1	= 3	; Compare Output Mode 3C, bit 1
                                 .equ	COM3B0	= 4	; Compare Output Mode 3B, bit 0
                                 .equ	COM3B1	= 5	; Compare Output Mode 3B, bit 1
                                 .equ	COM3A0	= 6	; Compare Output Mode 3A, bit 0
                                 .equ	COM3A1	= 7	; Compare Output Mode 1A, bit 1
                                 
                                 ; TCCR3B - Timer/Counter3 Control Register B
                                 .equ	CS30	= 0	; Prescaler source of Timer/Counter 3
                                 .equ	CS31	= 1	; Prescaler source of Timer/Counter 3
                                 .equ	CS32	= 2	; Prescaler source of Timer/Counter 3
                                 .equ	WGM32	= 3	; Waveform Generation Mode
                                 .equ	WGM33	= 4	; Waveform Generation Mode
                                 .equ	ICES3	= 6	; Input Capture 3 Edge Select
                                 .equ	ICNC3	= 7	; Input Capture 3 Noise Canceler
                                 
                                 ; TCCR3C - Timer/Counter 3 Control Register C
                                 .equ	FOC3C	= 5	; Force Output Compare 3C
                                 .equ	FOC3B	= 6	; Force Output Compare 3B
                                 .equ	FOC3A	= 7	; Force Output Compare 3A
                                 
                                 
                                 ; ***** TIMER_COUNTER_1 **************
                                 ; TIMSK1 - Timer/Counter1 Interrupt Mask Register
                                 .equ	TOIE1	= 0	; Timer/Counter1 Overflow Interrupt Enable
                                 .equ	OCIE1A	= 1	; Timer/Counter1 Output Compare A Match Interrupt Enable
                                 .equ	OCIE1B	= 2	; Timer/Counter1 Output Compare B Match Interrupt Enable
                                 .equ	OCIE1C	= 3	; Timer/Counter1 Output Compare C Match Interrupt Enable
                                 .equ	ICIE1	= 5	; Timer/Counter1 Input Capture Interrupt Enable
                                 
                                 ; TIFR1 - Timer/Counter1 Interrupt Flag register
                                 .equ	TOV1	= 0	; Timer/Counter1 Overflow Flag
                                 .equ	OCF1A	= 1	; Output Compare Flag 1A
                                 .equ	OCF1B	= 2	; Output Compare Flag 1B
                                 .equ	OCF1C	= 3	; Output Compare Flag 1C
                                 .equ	ICF1	= 5	; Input Capture Flag 1
                                 
                                 ; TCCR1A - Timer/Counter1 Control Register A
                                 .equ	WGM10	= 0	; Waveform Generation Mode
                                 .equ	WGM11	= 1	; Waveform Generation Mode
                                 .equ	COM1C0	= 2	; Compare Output Mode 1C, bit 0
                                 .equ	COM1C1	= 3	; Compare Output Mode 1C, bit 1
                                 .equ	COM1B0	= 4	; Compare Output Mode 1B, bit 0
                                 .equ	COM1B1	= 5	; Compare Output Mode 1B, bit 1
                                 .equ	COM1A0	= 6	; Compare Output Mode 1A, bit 0
                                 .equ	COM1A1	= 7	; Compare Output Mode 1A, bit 1
                                 
                                 ; TCCR1B - Timer/Counter1 Control Register B
                                 .equ	CS10	= 0	; Prescaler source of Timer/Counter 1
                                 .equ	CS11	= 1	; Prescaler source of Timer/Counter 1
                                 .equ	CS12	= 2	; Prescaler source of Timer/Counter 1
                                 .equ	WGM12	= 3	; Waveform Generation Mode
                                 .equ	WGM13	= 4	; Waveform Generation Mode
                                 .equ	ICES1	= 6	; Input Capture 1 Edge Select
                                 .equ	ICNC1	= 7	; Input Capture 1 Noise Canceler
                                 
                                 ; TCCR1C - Timer/Counter 1 Control Register C
                                 .equ	FOC1C	= 5	; Force Output Compare 1C
                                 .equ	FOC1B	= 6	; Force Output Compare 1B
                                 .equ	FOC1A	= 7	; Force Output Compare 1A
                                 
                                 
                                 ; ***** JTAG *************************
                                 ; OCDR - On-Chip Debug Related Register in I/O Memory
                                 .equ	OCDR0	= 0	; On-Chip Debug Register Bit 0
                                 .equ	OCDR1	= 1	; On-Chip Debug Register Bit 1
                                 .equ	OCDR2	= 2	; On-Chip Debug Register Bit 2
                                 .equ	OCDR3	= 3	; On-Chip Debug Register Bit 3
                                 .equ	OCDR4	= 4	; On-Chip Debug Register Bit 4
                                 .equ	OCDR5	= 5	; On-Chip Debug Register Bit 5
                                 .equ	OCDR6	= 6	; On-Chip Debug Register Bit 6
                                 .equ	OCDR7	= 7	; On-Chip Debug Register Bit 7
                                 .equ	IDRD	= OCDR7	; For compatibility
                                 
                                 ; MCUCR - MCU Control Register
                                 .equ	JTD	= 7	; JTAG Interface Disable
                                 
                                 ; MCUSR - MCU Status Register
                                 .equ	JTRF	= 4	; JTAG Reset Flag
                                 
                                 
                                 ; ***** EXTERNAL_INTERRUPT ***********
                                 ; EICRA - External Interrupt Control Register A
                                 .equ	ISC00	= 0	; External Interrupt Sense Control Bit
                                 .equ	ISC01	= 1	; External Interrupt Sense Control Bit
                                 .equ	ISC10	= 2	; External Interrupt Sense Control Bit
                                 .equ	ISC11	= 3	; External Interrupt Sense Control Bit
                                 .equ	ISC20	= 4	; External Interrupt Sense Control Bit
                                 .equ	ISC21	= 5	; External Interrupt Sense Control Bit
                                 .equ	ISC30	= 6	; External Interrupt Sense Control Bit
                                 .equ	ISC31	= 7	; External Interrupt Sense Control Bit
                                 
                                 ; EICRB - External Interrupt Control Register B
                                 .equ	ISC40	= 0	; External Interrupt 7-4 Sense Control Bit
                                 .equ	ISC41	= 1	; External Interrupt 7-4 Sense Control Bit
                                 .equ	ISC50	= 2	; External Interrupt 7-4 Sense Control Bit
                                 .equ	ISC51	= 3	; External Interrupt 7-4 Sense Control Bit
                                 .equ	ISC60	= 4	; External Interrupt 7-4 Sense Control Bit
                                 .equ	ISC61	= 5	; External Interrupt 7-4 Sense Control Bit
                                 .equ	ISC70	= 6	; External Interrupt 7-4 Sense Control Bit
                                 .equ	ISC71	= 7	; External Interrupt 7-4 Sense Control Bit
                                 
                                 ; EIMSK - External Interrupt Mask Register
                                 .equ	INT0	= 0	; External Interrupt Request 0 Enable
                                 .equ	INT1	= 1	; External Interrupt Request 1 Enable
                                 .equ	INT2	= 2	; External Interrupt Request 2 Enable
                                 .equ	INT3	= 3	; External Interrupt Request 3 Enable
                                 .equ	INT4	= 4	; External Interrupt Request 4 Enable
                                 .equ	INT5	= 5	; External Interrupt Request 5 Enable
                                 .equ	INT6	= 6	; External Interrupt Request 6 Enable
                                 .equ	INT7	= 7	; External Interrupt Request 7 Enable
                                 
                                 ; EIFR - External Interrupt Flag Register
                                 .equ	INTF0	= 0	; External Interrupt Flag 0
                                 .equ	INTF1	= 1	; External Interrupt Flag 1
                                 .equ	INTF2	= 2	; External Interrupt Flag 2
                                 .equ	INTF3	= 3	; External Interrupt Flag 3
                                 .equ	INTF4	= 4	; External Interrupt Flag 4
                                 .equ	INTF5	= 5	; External Interrupt Flag 5
                                 .equ	INTF6	= 6	; External Interrupt Flag 6
                                 .equ	INTF7	= 7	; External Interrupt Flag 7
                                 
                                 ; PCICR - Pin Change Interrupt Control Register
                                 .equ	PCIE0	= 0	; Pin Change Interrupt Enable 0
                                 .equ	PCIE1	= 1	; Pin Change Interrupt Enable 1
                                 .equ	PCIE2	= 2	; Pin Change Interrupt Enable 2
                                 
                                 ; PCIFR - Pin Change Interrupt Flag Register
                                 .equ	PCIF0	= 0	; Pin Change Interrupt Flag 0
                                 .equ	PCIF1	= 1	; Pin Change Interrupt Flag 1
                                 .equ	PCIF2	= 2	; Pin Change Interrupt Flag 2
                                 
                                 ; PCMSK2 - Pin Change Mask Register 2
                                 .equ	PCINT16	= 0	; Pin Change Enable Mask 16
                                 .equ	PCINT17	= 1	; Pin Change Enable Mask 17
                                 .equ	PCINT18	= 2	; Pin Change Enable Mask 18
                                 .equ	PCINT19	= 3	; Pin Change Enable Mask 19
                                 .equ	PCINT20	= 4	; Pin Change Enable Mask 20
                                 .equ	PCINT21	= 5	; Pin Change Enable Mask 21
                                 .equ	PCINT22	= 6	; Pin Change Enable Mask 22
                                 .equ	PCINT23	= 7	; Pin Change Enable Mask 23
                                 
                                 ; PCMSK1 - Pin Change Mask Register 1
                                 .equ	PCINT8	= 0	; Pin Change Enable Mask 8
                                 .equ	PCINT9	= 1	; Pin Change Enable Mask 9
                                 .equ	PCINT10	= 2	; Pin Change Enable Mask 10
                                 .equ	PCINT11	= 3	; Pin Change Enable Mask 11
                                 .equ	PCINT12	= 4	; Pin Change Enable Mask 12
                                 .equ	PCINT13	= 5	; Pin Change Enable Mask 13
                                 .equ	PCINT14	= 6	; Pin Change Enable Mask 14
                                 .equ	PCINT15	= 7	; Pin Change Enable Mask 15
                                 
                                 ; PCMSK0 - Pin Change Mask Register 0
                                 .equ	PCINT0	= 0	; Pin Change Enable Mask 0
                                 .equ	PCINT1	= 1	; Pin Change Enable Mask 1
                                 .equ	PCINT2	= 2	; Pin Change Enable Mask 2
                                 .equ	PCINT3	= 3	; Pin Change Enable Mask 3
                                 .equ	PCINT4	= 4	; Pin Change Enable Mask 4
                                 .equ	PCINT5	= 5	; Pin Change Enable Mask 5
                                 .equ	PCINT6	= 6	; Pin Change Enable Mask 6
                                 .equ	PCINT7	= 7	; Pin Change Enable Mask 7
                                 
                                 
                                 ; ***** CPU **************************
                                 ; SREG - Status Register
                                 .equ	SREG_C	= 0	; Carry Flag
                                 .equ	SREG_Z	= 1	; Zero Flag
                                 .equ	SREG_N	= 2	; Negative Flag
                                 .equ	SREG_V	= 3	; Two's Complement Overflow Flag
                                 .equ	SREG_S	= 4	; Sign Bit
                                 .equ	SREG_H	= 5	; Half Carry Flag
                                 .equ	SREG_T	= 6	; Bit Copy Storage
                                 .equ	SREG_I	= 7	; Global Interrupt Enable
                                 
                                 ; MCUCR - MCU Control Register
                                 .equ	IVCE	= 0	; Interrupt Vector Change Enable
                                 .equ	IVSEL	= 1	; Interrupt Vector Select
                                 .equ	PUD	= 4	; Pull-up disable
                                 ;.equ	JTD	= 7	; JTAG Interface Disable
                                 
                                 ; MCUSR - MCU Status Register
                                 .equ	PORF	= 0	; Power-on reset flag
                                 .equ	EXTRF	= 1	; External Reset Flag
                                 .equ	BORF	= 2	; Brown-out Reset Flag
                                 .equ	WDRF	= 3	; Watchdog Reset Flag
                                 ;.equ	JTRF	= 4	; JTAG Reset Flag
                                 
                                 ; XMCRA - External Memory Control Register A
                                 .equ	SRW00	= 0	; Wait state select bit lower page
                                 .equ	SRW01	= 1	; Wait state select bit lower page
                                 .equ	SRW10	= 2	; Wait state select bit upper page
                                 .equ	SRW11	= 3	; Wait state select bit upper page
                                 .equ	SRL0	= 4	; Wait state page limit
                                 .equ	SRL1	= 5	; Wait state page limit
                                 .equ	SRL2	= 6	; Wait state page limit
                                 .equ	SRE	= 7	; External SRAM Enable
                                 
                                 ; XMCRB - External Memory Control Register B
                                 .equ	XMM0	= 0	; External Memory High Mask
                                 .equ	XMM1	= 1	; External Memory High Mask
                                 .equ	XMM2	= 2	; External Memory High Mask
                                 .equ	XMBK	= 7	; External Memory Bus Keeper Enable
                                 
                                 ; OSCCAL - Oscillator Calibration Value
                                 .equ	CAL0	= 0	; Oscillator Calibration Value Bit0
                                 .equ	CAL1	= 1	; Oscillator Calibration Value Bit1
                                 .equ	CAL2	= 2	; Oscillator Calibration Value Bit2
                                 .equ	CAL3	= 3	; Oscillator Calibration Value Bit3
                                 .equ	CAL4	= 4	; Oscillator Calibration Value Bit4
                                 .equ	CAL5	= 5	; Oscillator Calibration Value Bit5
                                 .equ	CAL6	= 6	; Oscillator Calibration Value Bit6
                                 .equ	CAL7	= 7	; Oscillator Calibration Value Bit7
                                 
                                 ; CLKPR - 
                                 .equ	CLKPS0	= 0	; 
                                 .equ	CLKPS1	= 1	; 
                                 .equ	CLKPS2	= 2	; 
                                 .equ	CLKPS3	= 3	; 
                                 .equ	CLKPCE	= 7	; 
                                 
                                 ; SMCR - Sleep Mode Control Register
                                 .equ	SE	= 0	; Sleep Enable
                                 .equ	SM0	= 1	; Sleep Mode Select bit 0
                                 .equ	SM1	= 2	; Sleep Mode Select bit 1
                                 .equ	SM2	= 3	; Sleep Mode Select bit 2
                                 
                                 ; RAMPZ - RAM Page Z Select Register
                                 .equ	RAMPZ0	= 0	; RAM Page Z Select Register Bit 0
                                 .equ	RAMPZ1	= 1	; RAM Page Z Select Register Bit 1
                                 
                                 ; EIND - Extended Indirect Register
                                 .equ	EIND0	= 0	; Bit 0
                                 
                                 ; GPIOR2 - General Purpose IO Register 2
                                 .equ	GPIOR20	= 0	; General Purpose IO Register 2 bit 0
                                 .equ	GPIOR21	= 1	; General Purpose IO Register 2 bit 1
                                 .equ	GPIOR22	= 2	; General Purpose IO Register 2 bit 2
                                 .equ	GPIOR23	= 3	; General Purpose IO Register 2 bit 3
                                 .equ	GPIOR24	= 4	; General Purpose IO Register 2 bit 4
                                 .equ	GPIOR25	= 5	; General Purpose IO Register 2 bit 5
                                 .equ	GPIOR26	= 6	; General Purpose IO Register 2 bit 6
                                 .equ	GPIOR27	= 7	; General Purpose IO Register 2 bit 7
                                 
                                 ; GPIOR1 - General Purpose IO Register 1
                                 .equ	GPIOR10	= 0	; General Purpose IO Register 1 bit 0
                                 .equ	GPIOR11	= 1	; General Purpose IO Register 1 bit 1
                                 .equ	GPIOR12	= 2	; General Purpose IO Register 1 bit 2
                                 .equ	GPIOR13	= 3	; General Purpose IO Register 1 bit 3
                                 .equ	GPIOR14	= 4	; General Purpose IO Register 1 bit 4
                                 .equ	GPIOR15	= 5	; General Purpose IO Register 1 bit 5
                                 .equ	GPIOR16	= 6	; General Purpose IO Register 1 bit 6
                                 .equ	GPIOR17	= 7	; General Purpose IO Register 1 bit 7
                                 
                                 ; GPIOR0 - General Purpose IO Register 0
                                 .equ	GPIOR00	= 0	; General Purpose IO Register 0 bit 0
                                 .equ	GPIOR01	= 1	; General Purpose IO Register 0 bit 1
                                 .equ	GPIOR02	= 2	; General Purpose IO Register 0 bit 2
                                 .equ	GPIOR03	= 3	; General Purpose IO Register 0 bit 3
                                 .equ	GPIOR04	= 4	; General Purpose IO Register 0 bit 4
                                 .equ	GPIOR05	= 5	; General Purpose IO Register 0 bit 5
                                 .equ	GPIOR06	= 6	; General Purpose IO Register 0 bit 6
                                 .equ	GPIOR07	= 7	; General Purpose IO Register 0 bit 7
                                 
                                 ; PRR1 - Power Reduction Register1
                                 .equ	PRUSART1	= 0	; Power Reduction USART1
                                 .equ	PRUSART2	= 1	; Power Reduction USART2
                                 .equ	PRUSART3	= 2	; Power Reduction USART3
                                 .equ	PRTIM3	= 3	; Power Reduction Timer/Counter3
                                 .equ	PRTIM4	= 4	; Power Reduction Timer/Counter4
                                 .equ	PRTIM5	= 5	; Power Reduction Timer/Counter5
                                 
                                 ; PRR0 - Power Reduction Register0
                                 .equ	PRADC	= 0	; Power Reduction ADC
                                 .equ	PRUSART0	= 1	; Power Reduction USART
                                 .equ	PRSPI	= 2	; Power Reduction Serial Peripheral Interface
                                 .equ	PRTIM1	= 3	; Power Reduction Timer/Counter1
                                 .equ	PRTIM0	= 5	; Power Reduction Timer/Counter0
                                 .equ	PRTIM2	= 6	; Power Reduction Timer/Counter2
                                 .equ	PRTWI	= 7	; Power Reduction TWI
                                 
                                 
                                 ; ***** AD_CONVERTER *****************
                                 ; ADMUX - The ADC multiplexer Selection Register
                                 .equ	MUX0	= 0	; Analog Channel and Gain Selection Bits
                                 .equ	MUX1	= 1	; Analog Channel and Gain Selection Bits
                                 .equ	MUX2	= 2	; Analog Channel and Gain Selection Bits
                                 .equ	MUX3	= 3	; Analog Channel and Gain Selection Bits
                                 .equ	MUX4	= 4	; Analog Channel and Gain Selection Bits
                                 .equ	ADLAR	= 5	; Left Adjust Result
                                 .equ	REFS0	= 6	; Reference Selection Bit 0
                                 .equ	REFS1	= 7	; Reference Selection Bit 1
                                 
                                 ; ADCSRA - The ADC Control and Status register A
                                 .equ	ADPS0	= 0	; ADC  Prescaler Select Bits
                                 .equ	ADPS1	= 1	; ADC  Prescaler Select Bits
                                 .equ	ADPS2	= 2	; ADC  Prescaler Select Bits
                                 .equ	ADIE	= 3	; ADC Interrupt Enable
                                 .equ	ADIF	= 4	; ADC Interrupt Flag
                                 .equ	ADATE	= 5	; ADC  Auto Trigger Enable
                                 .equ	ADSC	= 6	; ADC Start Conversion
                                 .equ	ADEN	= 7	; ADC Enable
                                 
                                 ; ADCSRB - The ADC Control and Status register B
                                 .equ	ADTS0	= 0	; ADC Auto Trigger Source bit 0
                                 .equ	ADTS1	= 1	; ADC Auto Trigger Source bit 1
                                 .equ	ADTS2	= 2	; ADC Auto Trigger Source bit 2
                                 .equ	MUX5	= 3	; Analog Channel and Gain Selection Bits
                                 ;.equ	ACME	= 6	; 
                                 
                                 ; ADCH - ADC Data Register High Byte
                                 .equ	ADCH0	= 0	; ADC Data Register High Byte Bit 0
                                 .equ	ADCH1	= 1	; ADC Data Register High Byte Bit 1
                                 .equ	ADCH2	= 2	; ADC Data Register High Byte Bit 2
                                 .equ	ADCH3	= 3	; ADC Data Register High Byte Bit 3
                                 .equ	ADCH4	= 4	; ADC Data Register High Byte Bit 4
                                 .equ	ADCH5	= 5	; ADC Data Register High Byte Bit 5
                                 .equ	ADCH6	= 6	; ADC Data Register High Byte Bit 6
                                 .equ	ADCH7	= 7	; ADC Data Register High Byte Bit 7
                                 
                                 ; ADCL - ADC Data Register Low Byte
                                 .equ	ADCL0	= 0	; ADC Data Register Low Byte Bit 0
                                 .equ	ADCL1	= 1	; ADC Data Register Low Byte Bit 1
                                 .equ	ADCL2	= 2	; ADC Data Register Low Byte Bit 2
                                 .equ	ADCL3	= 3	; ADC Data Register Low Byte Bit 3
                                 .equ	ADCL4	= 4	; ADC Data Register Low Byte Bit 4
                                 .equ	ADCL5	= 5	; ADC Data Register Low Byte Bit 5
                                 .equ	ADCL6	= 6	; ADC Data Register Low Byte Bit 6
                                 .equ	ADCL7	= 7	; ADC Data Register Low Byte Bit 7
                                 
                                 ; DIDR0 - Digital Input Disable Register
                                 .equ	ADC0D	= 0	; 
                                 .equ	ADC1D	= 1	; 
                                 .equ	ADC2D	= 2	; 
                                 .equ	ADC3D	= 3	; 
                                 .equ	ADC4D	= 4	; 
                                 .equ	ADC5D	= 5	; 
                                 .equ	ADC6D	= 6	; 
                                 .equ	ADC7D	= 7	; 
                                 
                                 ; DIDR2 - Digital Input Disable Register
                                 .equ	ADC8D	= 0	; 
                                 .equ	ADC9D	= 1	; 
                                 .equ	ADC10D	= 2	; 
                                 .equ	ADC11D	= 3	; 
                                 .equ	ADC12D	= 4	; 
                                 .equ	ADC13D	= 5	; 
                                 .equ	ADC14D	= 6	; 
                                 .equ	ADC15D	= 7	; 
                                 
                                 
                                 ; ***** BOOT_LOAD ********************
                                 ; SPMCSR - Store Program Memory Control Register
                                 .equ	SPMEN	= 0	; Store Program Memory Enable
                                 .equ	PGERS	= 1	; Page Erase
                                 .equ	PGWRT	= 2	; Page Write
                                 .equ	BLBSET	= 3	; Boot Lock Bit Set
                                 .equ	RWWSRE	= 4	; Read While Write section read enable
                                 .equ	SIGRD	= 5	; Signature Row Read
                                 .equ	RWWSB	= 6	; Read While Write Section Busy
                                 .equ	SPMIE	= 7	; SPM Interrupt Enable
                                 
                                 
                                 ; ***** USART2 ***********************
                                 ; UDR2 - USART I/O Data Register
                                 .equ	UDR2_0	= 0	; USART I/O Data Register bit 0
                                 .equ	UDR2_1	= 1	; USART I/O Data Register bit 1
                                 .equ	UDR2_2	= 2	; USART I/O Data Register bit 2
                                 .equ	UDR2_3	= 3	; USART I/O Data Register bit 3
                                 .equ	UDR2_4	= 4	; USART I/O Data Register bit 4
                                 .equ	UDR2_5	= 5	; USART I/O Data Register bit 5
                                 .equ	UDR2_6	= 6	; USART I/O Data Register bit 6
                                 .equ	UDR2_7	= 7	; USART I/O Data Register bit 7
                                 
                                 ; UCSR2A - USART Control and Status Register A
                                 .equ	MPCM2	= 0	; Multi-processor Communication Mode
                                 .equ	U2X2	= 1	; Double the USART transmission speed
                                 .equ	UPE2	= 2	; Parity Error
                                 .equ	DOR2	= 3	; Data overRun
                                 .equ	FE2	= 4	; Framing Error
                                 .equ	UDRE2	= 5	; USART Data Register Empty
                                 .equ	TXC2	= 6	; USART Transmitt Complete
                                 .equ	RXC2	= 7	; USART Receive Complete
                                 
                                 ; UCSR2B - USART Control and Status Register B
                                 .equ	TXB82	= 0	; Transmit Data Bit 8
                                 .equ	RXB82	= 1	; Receive Data Bit 8
                                 .equ	UCSZ22	= 2	; Character Size
                                 .equ	TXEN2	= 3	; Transmitter Enable
                                 .equ	RXEN2	= 4	; Receiver Enable
                                 .equ	UDRIE2	= 5	; USART Data register Empty Interrupt Enable
                                 .equ	TXCIE2	= 6	; TX Complete Interrupt Enable
                                 .equ	RXCIE2	= 7	; RX Complete Interrupt Enable
                                 
                                 ; UCSR2C - USART Control and Status Register C
                                 .equ	UCPOL2	= 0	; Clock Polarity
                                 .equ	UCSZ20	= 1	; Character Size
                                 .equ	UCSZ21	= 2	; Character Size
                                 .equ	USBS2	= 3	; Stop Bit Select
                                 .equ	UPM20	= 4	; Parity Mode Bit 0
                                 .equ	UPM21	= 5	; Parity Mode Bit 1
                                 .equ	UMSEL20	= 6	; USART Mode Select
                                 .equ	UMSEL21	= 7	; USART Mode Select
                                 
                                 ; UBRR2H - USART Baud Rate Register High Byte
                                 ;.equ	UBRR8	= 0	; USART Baud Rate Register bit 8
                                 ;.equ	UBRR9	= 1	; USART Baud Rate Register bit 9
                                 ;.equ	UBRR10	= 2	; USART Baud Rate Register bit 10
                                 ;.equ	UBRR11	= 3	; USART Baud Rate Register bit 11
                                 
                                 ; UBRR2L - USART Baud Rate Register Low Byte
                                 .equ	UBRR0	= 0	; USART Baud Rate Register bit 0
                                 .equ	UBRR1	= 1	; USART Baud Rate Register bit 1
                                 ;.equ	UBRR2	= 2	; USART Baud Rate Register bit 2
                                 ;.equ	UBRR3	= 3	; USART Baud Rate Register bit 3
                                 ;.equ	UBRR4	= 4	; USART Baud Rate Register bit 4
                                 ;.equ	UBRR5	= 5	; USART Baud Rate Register bit 5
                                 ;.equ	UBRR6	= 6	; USART Baud Rate Register bit 6
                                 ;.equ	UBRR7	= 7	; USART Baud Rate Register bit 7
                                 
                                 
                                 ; ***** USART3 ***********************
                                 ; UDR3 - USART I/O Data Register
                                 .equ	UDR3_0	= 0	; USART I/O Data Register bit 0
                                 .equ	UDR3_1	= 1	; USART I/O Data Register bit 1
                                 .equ	UDR3_2	= 2	; USART I/O Data Register bit 2
                                 .equ	UDR3_3	= 3	; USART I/O Data Register bit 3
                                 .equ	UDR3_4	= 4	; USART I/O Data Register bit 4
                                 .equ	UDR3_5	= 5	; USART I/O Data Register bit 5
                                 .equ	UDR3_6	= 6	; USART I/O Data Register bit 6
                                 .equ	UDR3_7	= 7	; USART I/O Data Register bit 7
                                 
                                 ; UCSR3A - USART Control and Status Register A
                                 .equ	MPCM3	= 0	; Multi-processor Communication Mode
                                 .equ	U2X3	= 1	; Double the USART transmission speed
                                 .equ	UPE3	= 2	; Parity Error
                                 .equ	DOR3	= 3	; Data overRun
                                 .equ	FE3	= 4	; Framing Error
                                 .equ	UDRE3	= 5	; USART Data Register Empty
                                 .equ	TXC3	= 6	; USART Transmitt Complete
                                 .equ	RXC3	= 7	; USART Receive Complete
                                 
                                 ; UCSR3B - USART Control and Status Register B
                                 .equ	TXB83	= 0	; Transmit Data Bit 8
                                 .equ	RXB83	= 1	; Receive Data Bit 8
                                 .equ	UCSZ32	= 2	; Character Size
                                 .equ	TXEN3	= 3	; Transmitter Enable
                                 .equ	RXEN3	= 4	; Receiver Enable
                                 .equ	UDRIE3	= 5	; USART Data register Empty Interrupt Enable
                                 .equ	TXCIE3	= 6	; TX Complete Interrupt Enable
                                 .equ	RXCIE3	= 7	; RX Complete Interrupt Enable
                                 
                                 ; UCSR3C - USART Control and Status Register C
                                 .equ	UCPOL3	= 0	; Clock Polarity
                                 .equ	UCSZ30	= 1	; Character Size
                                 .equ	UCSZ31	= 2	; Character Size
                                 .equ	USBS3	= 3	; Stop Bit Select
                                 .equ	UPM30	= 4	; Parity Mode Bit 0
                                 .equ	UPM31	= 5	; Parity Mode Bit 1
                                 .equ	UMSEL30	= 6	; USART Mode Select
                                 .equ	UMSEL31	= 7	; USART Mode Select
                                 
                                 ; UBRR3H - USART Baud Rate Register High Byte
                                 ;.equ	UBRR8	= 0	; USART Baud Rate Register bit 8
                                 ;.equ	UBRR9	= 1	; USART Baud Rate Register bit 9
                                 ;.equ	UBRR10	= 2	; USART Baud Rate Register bit 10
                                 ;.equ	UBRR11	= 3	; USART Baud Rate Register bit 11
                                 
                                 ; UBRR3L - USART Baud Rate Register Low Byte
                                 ;.equ	UBRR0	= 0	; USART Baud Rate Register bit 0
                                 ;.equ	UBRR1	= 1	; USART Baud Rate Register bit 1
                                 ;.equ	UBRR2	= 2	; USART Baud Rate Register bit 2
                                 ;.equ	UBRR3	= 3	; USART Baud Rate Register bit 3
                                 ;.equ	UBRR4	= 4	; USART Baud Rate Register bit 4
                                 ;.equ	UBRR5	= 5	; USART Baud Rate Register bit 5
                                 ;.equ	UBRR6	= 6	; USART Baud Rate Register bit 6
                                 ;.equ	UBRR7	= 7	; USART Baud Rate Register bit 7
                                 
                                 
                                 
                                 ; ***** LOCKSBITS ********************************************************
                                 .equ	LB1	= 0	; Lock bit
                                 .equ	LB2	= 1	; Lock bit
                                 .equ	BLB01	= 2	; Boot Lock bit
                                 .equ	BLB02	= 3	; Boot Lock bit
                                 .equ	BLB11	= 4	; Boot lock bit
                                 .equ	BLB12	= 5	; Boot lock bit
                                 
                                 
                                 ; ***** FUSES ************************************************************
                                 ; LOW fuse bits
                                 .equ	CKSEL0	= 0	; Select Clock Source
                                 .equ	CKSEL1	= 1	; Select Clock Source
                                 .equ	CKSEL2	= 2	; Select Clock Source
                                 .equ	CKSEL3	= 3	; Select Clock Source
                                 .equ	SUT0	= 4	; Select start-up time
                                 .equ	SUT1	= 5	; Select start-up time
                                 .equ	CKOUT	= 6	; Clock output
                                 .equ	CKDIV8	= 7	; Divide clock by 8
                                 
                                 ; HIGH fuse bits
                                 .equ	BOOTRST	= 0	; Select Reset Vector
                                 .equ	BOOTSZ0	= 1	; Select Boot Size
                                 .equ	BOOTSZ1	= 2	; Select Boot Size
                                 .equ	EESAVE	= 3	; EEPROM memory is preserved through chip erase
                                 .equ	WDTON	= 4	; Watchdog timer always on
                                 .equ	SPIEN	= 5	; Enable Serial programming and Data Downloading
                                 .equ	JTAGEN	= 6	; Enable JTAG
                                 .equ	OCDEN	= 7	; Enable OCD
                                 
                                 ; EXTENDED fuse bits
                                 .equ	BODLEVEL0	= 0	; Brown-out Detector trigger level
                                 .equ	BODLEVEL1	= 1	; Brown-out Detector trigger level
                                 .equ	BODLEVEL2	= 2	; Brown-out Detector trigger level
                                 
                                 
                                 
                                 ; ***** CPU REGISTER DEFINITIONS *****************************************
                                 .def	XH	= r27
                                 .def	XL	= r26
                                 .def	YH	= r29
                                 .def	YL	= r28
                                 .def	ZH	= r31
                                 .def	ZL	= r30
                                 
                                 
                                 
                                 ; ***** DATA MEMORY DECLARATIONS *****************************************
                                 .equ	FLASHEND	= 0x1ffff	; Note: Word address
                                 .equ	IOEND	= 0x01ff
                                 .equ	SRAM_START	= 0x0200
                                 .equ	SRAM_SIZE	= 8192
                                 .equ	RAMEND	= 0x21ff
                                 .equ	XRAMEND	= 0xffff
                                 .equ	E2END	= 0x0fff
                                 .equ	EEPROMEND	= 0x0fff
                                 .equ	EEADRBITS	= 12
                                 #pragma AVRPART MEMORY PROG_FLASH 262144
                                 #pragma AVRPART MEMORY EEPROM 4096
                                 #pragma AVRPART MEMORY INT_SRAM SIZE 8192
                                 #pragma AVRPART MEMORY INT_SRAM START_ADDR 0x200
                                 
                                 
                                 
                                 ; ***** BOOTLOADER DECLARATIONS ******************************************
                                 .equ	NRWW_START_ADDR	= 0x1f000
                                 .equ	NRWW_STOP_ADDR	= 0x1ffff
                                 .equ	RWW_START_ADDR	= 0x0
                                 .equ	RWW_STOP_ADDR	= 0x1efff
                                 .equ	PAGESIZE	= 128
                                 .equ	FIRSTBOOTSTART	= 0x1fe00
                                 .equ	SECONDBOOTSTART	= 0x1fc00
                                 .equ	THIRDBOOTSTART	= 0x1f800
                                 .equ	FOURTHBOOTSTART	= 0x1f000
                                 .equ	SMALLBOOTSTART	= FIRSTBOOTSTART
                                 .equ	LARGEBOOTSTART	= FOURTHBOOTSTART
                                 
                                 
                                 
                                 ; ***** INTERRUPT VECTORS ************************************************
                                 .equ	INT0addr	= 0x0002	; External Interrupt Request 0
                                 .equ	INT1addr	= 0x0004	; External Interrupt Request 1
                                 .equ	INT2addr	= 0x0006	; External Interrupt Request 2
                                 .equ	INT3addr	= 0x0008	; External Interrupt Request 3
                                 .equ	INT4addr	= 0x000a	; External Interrupt Request 4
                                 .equ	INT5addr	= 0x000c	; External Interrupt Request 5
                                 .equ	INT6addr	= 0x000e	; External Interrupt Request 6
                                 .equ	INT7addr	= 0x0010	; External Interrupt Request 7
                                 .equ	PCI0addr	= 0x0012	; Pin Change Interrupt Request 0
                                 .equ	PCI1addr	= 0x0014	; Pin Change Interrupt Request 1
                                 .equ	PCI2addr	= 0x0016	; Pin Change Interrupt Request 2
                                 .equ	WDTaddr	= 0x0018	; Watchdog Time-out Interrupt
                                 .equ	OC2Aaddr	= 0x001a	; Timer/Counter2 Compare Match A
                                 .equ	OC2Baddr	= 0x001c	; Timer/Counter2 Compare Match B
                                 .equ	OVF2addr	= 0x001e	; Timer/Counter2 Overflow
                                 .equ	ICP1addr	= 0x0020	; Timer/Counter1 Capture Event
                                 .equ	OC1Aaddr	= 0x0022	; Timer/Counter1 Compare Match A
                                 .equ	OC1Baddr	= 0x0024	; Timer/Counter1 Compare Match B
                                 .equ	OC1Caddr	= 0x0026	; Timer/Counter1 Compare Match C
                                 .equ	OVF1addr	= 0x0028	; Timer/Counter1 Overflow
                                 .equ	OC0Aaddr	= 0x002a	; Timer/Counter0 Compare Match A
                                 .equ	OC0Baddr	= 0x002c	; Timer/Counter0 Compare Match B
                                 .equ	OVF0addr	= 0x002e	; Timer/Counter0 Overflow
                                 .equ	SPIaddr	= 0x0030	; SPI Serial Transfer Complete
                                 .equ	URXC0addr	= 0x0032	; USART0, Rx Complete
                                 .equ	UDRE0addr	= 0x0034	; USART0 Data register Empty
                                 .equ	UTXC0addr	= 0x0036	; USART0, Tx Complete
                                 .equ	ACIaddr	= 0x0038	; Analog Comparator
                                 .equ	ADCCaddr	= 0x003a	; ADC Conversion Complete
                                 .equ	ERDYaddr	= 0x003c	; EEPROM Ready
                                 .equ	ICP3addr	= 0x003e	; Timer/Counter3 Capture Event
                                 .equ	OC3Aaddr	= 0x0040	; Timer/Counter3 Compare Match A
                                 .equ	OC3Baddr	= 0x0042	; Timer/Counter3 Compare Match B
                                 .equ	OC3Caddr	= 0x0044	; Timer/Counter3 Compare Match C
                                 .equ	OVF3addr	= 0x0046	; Timer/Counter3 Overflow
                                 .equ	URXC1addr	= 0x0048	; USART1, Rx Complete
                                 .equ	UDRE1addr	= 0x004a	; USART1 Data register Empty
                                 .equ	UTXC1addr	= 0x004c	; USART1, Tx Complete
                                 .equ	TWIaddr	= 0x004e	; 2-wire Serial Interface
                                 .equ	SPMRaddr	= 0x0050	; Store Program Memory Read
                                 .equ	ICP4addr	= 0x0052	; Timer/Counter4 Capture Event
                                 .equ	OC4Aaddr	= 0x0054	; Timer/Counter4 Compare Match A
                                 .equ	OC4Baddr	= 0x0056	; Timer/Counter4 Compare Match B
                                 .equ	OC4Caddr	= 0x0058	; Timer/Counter4 Compare Match C
                                 .equ	OVF4addr	= 0x005a	; Timer/Counter4 Overflow
                                 .equ	ICP5addr	= 0x005c	; Timer/Counter5 Capture Event
                                 .equ	OC5Aaddr	= 0x005e	; Timer/Counter5 Compare Match A
                                 .equ	OC5Baddr	= 0x0060	; Timer/Counter5 Compare Match B
                                 .equ	OC5Caddr	= 0x0062	; Timer/Counter5 Compare Match C
                                 .equ	OVF5addr	= 0x0064	; Timer/Counter5 Overflow
                                 .equ	URXC2addr	= 0x0066	; USART2, Rx Complete
                                 .equ	UDRE2addr	= 0x0068	; USART2 Data register Empty
                                 .equ	UTXC2addr	= 0x006a	; USART2, Tx Complete
                                 .equ	URXC3addr	= 0x006c	; USART3, Rx Complete
                                 .equ	UDRE3addr	= 0x006e	; USART3 Data register Empty
                                 .equ	UTXC3addr	= 0x0070	; USART3, Tx Complete
                                 
                                 .equ	INT_VECTORS_SIZE	= 114	; size in words
                                 
                                 #endif  /* _M2560DEF_INC_ */
                                 
                                 ; ***** END OF FILE ******************************************************
                                 
                                 
                                 ;***** Created: 2011-02-09 12:03 ******* Source: ATmega2560.xml **********
                                 ;*************************************************************************
                                 ;* A P P L I C A T I O N   N O T E   F O R   T H E   A V R   F A M I L Y
                                 ;* 
                                 ;* Number            : AVR000
                                 ;* File Name         : "m2560def.inc"
                                 ;* Title             : Register/Bit Definitions for the ATmega2560
                                 ;* Date              : 2011-02-09
                                 ;* Version           : 2.35
                                 ;* Support E-mail    : avr@atmel.com
                                 ;* Target MCU        : ATmega2560
                                 ;* 
                                 ;* DESCRIPTION
                                 ;* When including this file in the assembly program file, all I/O register 
                                 ;* names and I/O register bit names appearing in the data book can be used.
                                 ;* In addition, the six registers forming the three data pointers X, Y and 
                                 ;* Z have been assigned names XL - ZH. Highest RAM address for Internal 
                                 ;* SRAM is also defined 
                                 ;* 
                                 ;* The Register names are represented by their hexadecimal address.
                                 ;* 
                                 ;* The Register Bit names are represented by their bit number (0-7).
                                 ;* 
                                 ;* Please observe the difference in using the bit names with instructions
                                 ;* such as "sbr"/"cbr" (set/clear bit in register) and "sbrs"/"sbrc"
                                 ;* (skip if bit in register set/cleared). The following example illustrates
                                 ;* this:
                                 ;* 
                                 ;* in    r16,PORTB             ;read PORTB latch
                                 ;* sbr   r16,(1<<PB6)+(1<<PB5) ;set PB6 and PB5 (use masks, not bit#)
                                 ;* out   PORTB,r16             ;output to PORTB
                                 ;* 
                                 ;* in    r16,TIFR              ;read the Timer Interrupt Flag Register
                                 ;* sbrc  r16,TOV0              ;test the overflow flag (use bit#)
                                 ;* rjmp  TOV0_is_set           ;jump if set
                                 ;* ...                         ;otherwise do something else
                                 ;*************************************************************************
                                 
                                 #ifndef _M2560DEF_INC_
                                 #endif  /* _M2560DEF_INC_ */
                                 
                                 ; ***** END OF FILE ******************************************************
                                 
                                 .equ LCD_CTRL_PORT = PORTA
                                 .equ LCD_CTRL_DDR = DDRA
                                 .equ LCD_RS = 7
                                 .equ LCD_E = 6
                                 .equ LCD_RW = 5
                                 .equ LCD_BE = 4	
                                 
                                 .equ LCD_DATA_PORT = PORTF
                                 .equ LCD_DATA_DDR = DDRF
                                 .equ LCD_DATA_PIN = PINF
                                 
                                 .def row = r24 //row
                                 .def col = r17 //column
                                 .def rmask = r18 //mask for current row during scan
                                 .def cmask = r19 //mask for current column during scan
                                 .def temp1 = r20
                                 .def temp2 = r16
                                 
                                 .equ PORTFDIR =0xF0  //PORTf 4-7BIT SET FOR OUTPUT
                                 .equ INITCOLMASK = 0xEF //11101111 SCAN colum from the left  C3 c2 c1 c0 r3 r2 r1 r0
                                 .equ INITROWMASK = 0x01 //
                                 .equ ROWMASK = 0x0F // for get input from PortF
                                 
                                 .equ pattern = 0b11111111
                                 .equ pattern1 = 0b00000000
                                 
                                 .cseg
                                 
000000 940c 008e                 	jmp Reset
                                 .org INT0addr
000002 940c 0006                 	jmp Ext_int0
                                 .org INT1addr 
000004 940c 0055                 	jmp EXT_INT1
                                 
                                 .macro STORE
                                 .if @0 > 63 //I/O adress or not
                                 sts @0, @1
                                 .else
                                 out @0, @1
                                 .endif
                                 .endmacro
                                 
                                 .macro LOAD
                                 .if @1 > 63 //I/O adress or not
                                 lds @0, @1
                                 .else
                                 in @0, @1
                                 .endif
                                 .endmacro
                                 
                                 .macro do_lcd_command
                                 	ldi r16, @0
                                 	rcall lcd_command
                                 	rcall lcd_wait
                                 .endmacro
                                 .macro do_lcd_data
                                 	ldi r16, @0
                                 	rcall lcd_data
                                 	rcall lcd_wait
                                 .endmacro
                                 
                                 Ext_int0:
000006 ffa0                      	sbrs r26,0
000007 9518                      	reti
000008 fda1                      	sbrc r26,1
000009 9518                      	reti
00000a 934f                      	push temp1 //save register
00000b b74f                      	in temp1,SREG //save SREG
00000c 934f                      	push temp1	
                                 	//out PortC,output //display pattern now
00000d 914f                      	pop temp1
00000e bf4f                      	out SREG,temp1
00000f 914f                      	pop temp1
000010 e04f                      	ldi temp1,0b00001111
000011 9340 010b                 	sts PORTL,temp1
                                 delay1s_1:
000013 d3ca                      	rcall sleep_1ms
000014 d3c9                      	rcall sleep_1ms
000015 d3c8                      	rcall sleep_1ms
000016 e021                      	ldi r18,1
000017 0f32                      	add r19,r18
000018 ef2f                      	ldi r18,255
000019 1723                      	cp r18,r19
00001a f7c1                      	brne delay1s_1
00001b ef40                      	ldi temp1,0b11110000
00001c 9340 010b                 	sts PORTL,temp1
                                 delay1s_2:
00001e d3bf                      	rcall sleep_1ms
00001f d3be                      	rcall sleep_1ms
000020 d3bd                      	rcall sleep_1ms
000021 e021                      	ldi r18,1
000022 0f32                      	add r19,r18
000023 ef2f                      	ldi r18,255
000024 1723                      	cp r18,r19
000025 f7c1                      	brne delay1s_2
000026 ef4f                      	ldi temp1,0b11111111
000027 9340 010b                 	sts PORTL,temp1
                                 delay1s_3:
000029 d3b4                      	rcall sleep_1ms
00002a d3b3                      	rcall sleep_1ms
00002b d3b2                      	rcall sleep_1ms
00002c e021                      	ldi r18,1
00002d 0f32                      	add r19,r18
00002e ef2f                      	ldi r18,255
00002f 1723                      	cp r18,r19
000030 f7c1                      	brne delay1s_3
000031 e040                      	ldi temp1,0b00000000
000032 9340 010b                 	sts PORTL,temp1
000034 ec00
000035 d387
000036 d396                      	do_lcd_command 0b11000000
000037 e703
000038 d38b
000039 d393                      	do_lcd_data's'
00003a e704
00003b d388
00003c d390                      	do_lcd_data't'
00003d e601
00003e d385
00003f d38d                      	do_lcd_data'a'
000040 e704
000041 d382
000042 d38a                      	do_lcd_data't'
000043 e705
000044 d37f
000045 d387                      	do_lcd_data'u'
000046 e703
000047 d37c
000048 d384                      	do_lcd_data's'
000049 e30a
00004a d379
00004b d381                      	do_lcd_data':'
00004c e402
00004d d376
00004e d37e                      	do_lcd_data'B'
00004f e405
000050 d373
000051 d37b                      	do_lcd_data'E'
000052 e042                      	ldi temp1,0b00000010
000053 2ba4                      	or r26,temp1
000054 9518                      	reti
                                 EXT_INT1:
000055 ffa0                      	sbrs r26,0
000056 9518                      	reti
000057 ffa1                      	sbrs r26,1
000058 9518                      	reti
000059 934f                      	push temp1 //save register
00005a b74f                      	in temp1,SREG //save SREG
00005b 934f                      	push temp1	
                                 	//out PortC,output //display pattern now
00005c 914f                      	pop temp1
00005d bf4f                      	out SREG,temp1
00005e 914f                      	pop temp1
00005f ec00
000060 d35c
000061 d36b                      	do_lcd_command 0b11000000
000062 ffa5                      	sbrs r26,5
000063 e002
000064 d358
000065 d367                      	do_lcd_command 0b000000010
000066 e503
000067 d35c
000068 d364                      	do_lcd_data'S'
000069 e504
00006a d359
00006b d361                      	do_lcd_data'T'
00006c e200
00006d d356
00006e d35e                      	do_lcd_data' '
00006f e200
000070 d353
000071 d35b                      	do_lcd_data' '
000072 e200
000073 d350
000074 d358                      	do_lcd_data' '
000075 e200
000076 d34d
000077 d355                      	do_lcd_data' '
000078 e200
000079 d34a
00007a d352                      	do_lcd_data' '
00007b e200
00007c d347
00007d d34f                      	do_lcd_data' '
00007e e200
00007f d344
000080 d34c                      	do_lcd_data' '
000081 e200
000082 d341
000083 d349                      	do_lcd_data' '
000084 ffa5                      	sbrs r26,5
000085 e40e
000086 d33d
000087 d345                      	do_lcd_data'N'
000088 e406
000089 d33a
00008a d342                      	do_lcd_data'F'
00008b e100                      	ldi r16,0b00010000
00008c 2ba0                      	or r26,r16
00008d c1d8                      	rjmp comp	
                                 RESET:
00008e b10d                      	in r16,DDRE
00008f 6100                      	ori r16,0b00010000
000090 b90d                      	out DDRE,r16
000091 2700                      	clr r16
000092 9300 009b                 	sts OCR3BH,r16
000094 e000                      	ldi r16,0  
000095 9300 009a                 	sts OCR3BL,r16
000097 e001                      	ldi r16,(1<<CS30)
000098 9300 0091                 	sts TCCR3B,r16
00009a e201                      	ldi r16,(1<<WGM30)|(1<<COM3B1)
00009b 9300 0090                 	sts TCCR3A,r16
00009d ef4f                      	ser temp1 //set port L for output
00009e 9340 010a                 	sts DDRL,temp1
0000a0 e04a                      	ldi temp1,(2<<ISC00)|(2<<ISC10) //EICA (3-0) set ISC00 ISC01 0 1 for falling edge triiger interrupt(2 = 10)
0000a1 9340 0069                 	sts EICRA,temp1
                                 
0000a3 b34d                      	in temp1,EIMSK   //enable int0(mask EIMSk bit 0 =1)
0000a4 6043                      	ori temp1,(1<<Int0)|(1<<INT1)
0000a5 bb4d                      	out EIMSK,temp1
                                 
0000a6 9478                      	sei   //enable SREG I bit(global interrupt)
                                 
0000a7 e0a0                      	ldi r26,0b00000000
0000a8 ef40                      	ldi temp1,PORTFDIR //DDRF 1111 0000 bit 4-7 for output 0-3 input
0000a9 b947                      	out DDRC,temp1
                                 
0000aa ef0f                      	ldi r16, low(RAMEND)//put the pointer of stack to the lowest address to avoid conflict
0000ab bf0d                      	out SPL, r16
0000ac e201                      	ldi r16, high(RAMEND)
0000ad bf0e                      	out SPH, r16
                                 
0000ae ef0f                      	ser r16 //portA to control lcd,portF for lcd output
0000af bb00                      	STORE LCD_DATA_DDR, r16
0000b0 b901                      	STORE LCD_CTRL_DDR, r16
0000b1 2700                      	clr r16
0000b2 bb01                      	STORE LCD_DATA_PORT, r16
0000b3 b902                      	STORE LCD_CTRL_PORT, r16
                                 
                                 	//Software Initialization(8 bits)
0000b4 e308
0000b5 d307
0000b6 d316                      	do_lcd_command 0b00111000 ; 2x5x7  Software Initialization 2line display,8-bit length,5 x 7 dots 
                                 	//Function Set Command: (8-Bit interface) BF cannot be checked before this command
0000b7 d32f                      	rcall sleep_5ms //No data should be transferred to or from the display during this time.
0000b8 e308
0000b9 d303
0000ba d312                      	do_lcd_command 0b00111000 ; 2x5x7
0000bb d322                      	rcall sleep_1ms
0000bc e308
0000bd d2ff
0000be d30e                      	do_lcd_command 0b00111000 ; 2x5x7
0000bf e308
0000c0 d2fc
0000c1 d30b                      	do_lcd_command 0b00111000 ; 2x5x7
0000c2 e008
0000c3 d2f9
0000c4 d308                      	do_lcd_command 0b00001000 ; display off
0000c5 e001
0000c6 d2f6
0000c7 d305                      	do_lcd_command 0b00000001 ; clear display
0000c8 e00e
0000c9 d2f3
0000ca d302                      	do_lcd_command 0b00001110 ; increment, no display shift //Cursor or Display Shift Shifts cursor position to the right (AC is incremented by one)
0000cb e00e
0000cc d2f0
0000cd d2ff                      	do_lcd_command 0b00001110 ; Cursor on, bar, no blink
0000ce e508
0000cf d2f4
0000d0 d2fc                      	do_lcd_data'X'
0000d1 e30a
0000d2 d2f1
0000d3 d2f9                      	do_lcd_data':'
0000d4 e0b0                      	ldi r27,0
                                 
                                 main:
0000d5 fda0                      	sbrc r26,0
0000d6 c10f                      	rjmp inbutton
0000d7 ee3f                      	ldi cmask,INITCOLMASK //colmask from left
0000d8 2711                      	clr col  //row from 0
0000d9 c000                      	rjmp colloop
                                 
                                 colloop:
0000da 3014                      	cpi col,4  //all nor pressed back
0000db f3c9                      	breq main
0000dc b938                      	out PORTC,cmask  //scan column
0000dd ef4f                      	ldi temp1,0xFF
                                 
                                 delay:
0000de 954a                      	dec temp1 //slow down scan colum
0000df f7f1                      	brne delay
                                 
0000e0 b146                      	in temp1,PINC   //read portF
0000e1 704f                      	andi temp1,ROWMASK //get value from cureet colum
0000e2 304f                      	cpi temp1,0xF
0000e3 f059                      	breq nextcol //no 0(pressed) scan next colum
                                 
0000e4 e021                      	ldi rmask,INITROWMASK //rowmask from 0001
0000e5 2788                      	clr row //from 0
                                 
                                 rowloop:
0000e6 3084                      	cpi row,4 //row scan over
0000e7 f039                      	breq nextcol 
0000e8 2f04                      	mov temp2,temp1
0000e9 2302                      	and temp2,rmask //get (colum,row) pressed or not
0000ea f041                      	breq continue //0 to get number
0000eb 9583                      	inc row
0000ec 0f22                      	lsl rmask //0001 -- 0010 -- 0100 -- 1000
0000ed 940c 00e6                 	jmp rowloop
                                 
                                 nextcol:  //row scan over
0000ef 0f33                      	lsl cmask 
0000f0 9513                      	inc col // column +1
0000f1 940c 00da                 	jmp colloop
                                 
                                 continue:
0000f3 b146                      	in temp1,PINC  //read portC
0000f4 704f                      	andi temp1,ROWMASK //get value from cureet colum
0000f5 304f                      	cpi temp1,0xF 
0000f6 f009                      	breq convert //loose button then display it
0000f7 cffb                      	rjmp continue 
                                 
                                 convert:
0000f8 3013                      	cpi col,3 //co3 has A,B,C,D
0000f9 f061                      	breq letters
0000fa 3083                      	cpi row,3
0000fb f061                      	breq symbols //row3 0,*,#
0000fc 2f48                      	mov temp1,row // or 1-9
0000fd 0f44                      	lsl temp1 //row *3 + col
0000fe 0f48                      	add temp1,row
0000ff 0f41                      	add temp1,col
000100 5f4f                      	subi temp1,-1
000101 e300                      	ldi r16,'0'
000102 0f04                      	add r16,temp1
000103 d2c0                      	rcall lcd_data
000104 d2c8                      	rcall lcd_wait
000105 c01e                      	rjmp convert_end
                                 
                                 letters:
000106 940c 012c                 	jmp wrong
                                 
                                 symbols:
000108 3010                      	cpi col,0
000109 f041                      	breq star //*
00010a 3011                      	cpi col,1
00010b f099                      	breq zero //0
00010c e33f                      	ldi r19,63
00010d 173b                      	cp r19,r27
00010e f0e8                      	brlo wrong
00010f e031                      	ldi r19,0b00000001
000110 2ba3                      	or r26,r19
000111 c036                      	rjmp playxyz
                                 
                                 star://*
000112 2fcb                      	mov r28,r27 //1st num to r28
000113 e0b0                      	ldi r27,0 //r27 clear
000114 e032                      	ldi r19,0b00000010
                                 	//or r26,r19
000115 ec00
000116 d2a6
000117 d2b5                      	do_lcd_command 0b11000000
000118 e509
000119 d2aa
00011a d2b2                      	do_lcd_data'Y'
00011b e30a
00011c d2a7
00011d d2af                      	do_lcd_data':'
00011e cfb6                      	rjmp main
                                 zero:
00011f e040                      	ldi temp1,0
000120 e300                      	ldi r16,'0'
000121 0f04                      	add r16,temp1
000122 d2a1                      	rcall lcd_data
000123 d2a9                      	rcall lcd_wait
                                 convert_end: 
000124 e00a                      	ldi r16,10
000125 9fb0                      	mul r27,r16
000126 2db0                      	mov r27,r0
000127 0fb4                      	add r27,temp1
000128 e33f                      	ldi r19,63
000129 173b                      	cp r19,r27
00012a f008                      	brlo wrong
00012b cfa9                      	rjmp main
                                 
                                 wrong:
00012c e001
00012d d28f
00012e d29e                      	do_lcd_command 0b00000001
00012f e707
000130 d293
000131 d29b                      	do_lcd_data'w'
000132 e702
000133 d290
000134 d298                      	do_lcd_data'r'
000135 e60f
000136 d28d
000137 d295                      	do_lcd_data'o'
000138 e60e
000139 d28a
00013a d292                      	do_lcd_data'n'
00013b e607
00013c d287
00013d d28f                      	do_lcd_data'g'
00013e e030                      	ldi r19,0
                                 delay1s:
00013f d29e                      	rcall sleep_1ms
000140 d29d                      	rcall sleep_1ms
000141 d29c                      	rcall sleep_1ms
000142 e021                      	ldi r18,1
000143 0f32                      	add r19,r18
000144 ef2f                      	ldi r18,255
000145 1723                      	cp r18,r19
000146 f7c1                      	brne delay1s
                                 rest:
000147 cf46                      	rjmp reset
                                 
                                 playxyz:
000148 2e2c                      	mov r2,r28
000149 2e3b                      	mov r3,r27
00014a e0f7                      	ldi ZH, high(table<<1) ; initialize Z 
00014b eee8                      	ldi ZL, low(table<<1)
00014c e430                      	ldi r19,64
00014d 9fb3                      	mul r27,r19
00014e 2d00                      	mov r16,r0
00014f 2d11                      	mov r17,r1
000150 0f0c                      	add r16,r28
000151 e030                      	ldi r19,0
000152 1f13                      	adc r17,r19
000153 9488                      	clc
000154 0fe0                      	add r30,r16
000155 1ff3                      	adc r31,r19
000156 9488                      	clc
000157 0ff1                      	add r31,r17
000158 9114                      	lpm r17, Z
000159 e001
00015a d262
00015b d271                      	do_lcd_command 0b00000001
00015c e208
00015d d266
00015e d26e                      	do_lcd_data'('
00015f e00a                      	ldi r16,10
000160 e020                      	ldi r18,0
000161 2f3c                      	mov r19,r28
000162 17c0                      	cp r28,r16
000163 f428                      	brsh sub10
000164 e300                      	ldi r16,'0'
000165 0f03                      	add r16,r19
000166 d25d                      	rcall lcd_data
000167 d265                      	rcall lcd_wait
000168 c00c                      	rjmp disy
                                 sub10:
000169 1b30                      	 sub r19,r16
00016a 9523                      	 inc r18
00016b 1730                      	 cp r19,r16
00016c f7e0                      	 brsh sub10
00016d e300                      	 ldi r16,'0'
00016e 0f02                      	 add r16,r18
00016f d254                      	 rcall lcd_data
000170 d25c                      	 rcall lcd_wait
000171 e300                      	 ldi r16,'0'
000172 0f03                      	 add r16,r19
000173 d250                      	 rcall lcd_data
000174 d258                      	 rcall lcd_wait	
                                 disy:
000175 e20c
000176 d24d
000177 d255                      	do_lcd_data','
000178 e00a                      	ldi r16,10
000179 e020                      	ldi r18,0
00017a 2f3b                      	mov r19,r27
00017b 17b0                      	cp r27,r16
00017c f428                      	brsh sub10_y
00017d e300                      	ldi r16,'0'
00017e 0f03                      	add r16,r19
00017f d244                      	rcall lcd_data
000180 d24c                      	rcall lcd_wait
000181 c00c                      	rjmp dis_z
                                 sub10_y:
000182 1b30                      	 sub r19,r16
000183 9523                      	 inc r18
000184 1730                      	 cp r19,r16
000185 f7e0                      	 brsh sub10_y
000186 e300                      	 ldi r16,'0'
000187 0f02                      	 add r16,r18
000188 d23b                      	 rcall lcd_data
000189 d243                      	 rcall lcd_wait
00018a e300                      	 ldi r16,'0'
00018b 0f03                      	 add r16,r19
00018c d237                      	 rcall lcd_data
00018d d23f                      	 rcall lcd_wait	
                                 dis_z:
00018e e20c
00018f d234
000190 d23c                      	do_lcd_data','
000191 e00a                      	ldi r16,10
000192 e020                      	ldi r18,0
000193 2f31                      	mov r19,r17
000194 1710                      	cp r17,r16
000195 f480                      	brsh sub10_z
000196 e300                      	ldi r16,'0'
000197 0f03                      	add r16,r19
000198 d22b                      	rcall lcd_data
000199 d233                      	rcall lcd_wait
00019a e209
00019b d228
00019c d230                      	do_lcd_data')'
00019d e830                      	ldi r19,0b10000000
00019e 2b13                      	or r17,r19
00019f 8310                      	st Z,r17
0001a0 9114                      	lpm r17,Z
0001a1 fd17                      	sbrc r17,7
0001a2 e200
0001a3 d220
0001a4 d228                      	do_lcd_data' '
0001a5 c013                      	rjmp showstatus
                                 sub10_z:
0001a6 1b30                      	 sub r19,r16
0001a7 9523                      	 inc r18
0001a8 1730                      	 cp r19,r16
0001a9 f7e0                      	 brsh sub10_z
0001aa e300                      	 ldi r16,'0'
0001ab 0f02                      	 add r16,r18
0001ac d217                      	 rcall lcd_data
0001ad d21f                      	 rcall lcd_wait
0001ae e300                      	 ldi r16,'0'
0001af 0f03                      	 add r16,r19
0001b0 d213                      	 rcall lcd_data
0001b1 d21b                      	 rcall lcd_wait
0001b2 e209
0001b3 d210
0001b4 d218                      	 do_lcd_data')'
0001b5 e830                      	 ldi r19,0b10000000
0001b6 2b13                      	 or r17,r19
0001b7 8310                      	  st Z,r17
0001b8 9114                      	 lpm r17,Z
                                 	 
                                 showstatus:
0001b9 e0f7                      	ldi ZH, high(table<<1) ; initialize Z 
0001ba eee8                      	ldi ZL, low(table<<1)
0001bb e430                      	ldi r19,64
0001bc 9fb3                      	mul r27,r19
0001bd 2d00                      	mov r16,r0
0001be 2d11                      	mov r17,r1
0001bf 0f0c                      	add r16,r28
0001c0 e030                      	ldi r19,0
0001c1 1f13                      	adc r17,r19
0001c2 9488                      	clc
0001c3 0fe0                      	add r30,r16
0001c4 1ff3                      	adc r31,r19
0001c5 9488                      	clc
0001c6 0ff1                      	add r31,r17
0001c7 9114                      	lpm r17, Z
0001c8 ec00
0001c9 d1f3
0001ca d202                      	do_lcd_command 0b11000000
                                 	
0001cb e703
0001cc d1f7
0001cd d1ff                      	do_lcd_data's'
0001ce e704
0001cf d1f4
0001d0 d1fc                      	do_lcd_data't'
0001d1 e601
0001d2 d1f1
0001d3 d1f9                      	do_lcd_data'a'
0001d4 e704
0001d5 d1ee
0001d6 d1f6                      	do_lcd_data't'
0001d7 e705
0001d8 d1eb
0001d9 d1f3                      	do_lcd_data'u'
0001da e703
0001db d1e8
0001dc d1f0                      	do_lcd_data's'
0001dd e30a
0001de d1e5
0001df d1ed                      	do_lcd_data':'
0001e0 e505
0001e1 d1e2
0001e2 d1ea                      	do_lcd_data'U'
0001e3 e402
0001e4 d1df
0001e5 d1e7                      	do_lcd_data'B'	
                                 inbutton:
0001e6 ffa1                      	sbrs r26,1
0001e7 cffe                      	rjmp inbutton
0001e8 e010                      	ldi r17,0
0001e9 e050                      	ldi r21,0
0001ea e0f7                      	ldi ZH, high(table<<1) ; initialize Z 
0001eb eee8                      	ldi ZL, low(table<<1)
0001ec 9164                      	lpm r22,Z
0001ed ec00
0001ee d1ce
0001ef d1dd                      	do_lcd_command 0b11000000
0001f0 e703
0001f1 d1d2
0001f2 d1da                      	do_lcd_data's'
0001f3 e704
0001f4 d1cf
0001f5 d1d7                      	do_lcd_data't'
0001f6 e601
0001f7 d1cc
0001f8 d1d4                      	do_lcd_data'a'
0001f9 e704
0001fa d1c9
0001fb d1d1                      	do_lcd_data't'
0001fc e705
0001fd d1c6
0001fe d1ce                      	do_lcd_data'u'
0001ff e703
000200 d1c3
000201 d1cb                      	do_lcd_data's'
000202 e30a
000203 d1c0
000204 d1c8                      	do_lcd_data':'
000205 e505
000206 d1bd
000207 d1c5                      	do_lcd_data'U'
000208 e700
000209 d1ba
00020a d1c2                      	do_lcd_data'p'
00020b ef0f                      	ldi r16,0xFF
00020c 9300 009a                 	sts OCR3BL,r16
00020e e00a                      	ldi r16,10
00020f e020                      	ldi r18,0
000210 2f36                      	mov r19,r22	
                                 startup:
000211 e00a                      	ldi r16,10
000212 1760                      	cp r22,r16
000213 f408                      	brsh sub10_zu
000214 c005                      	rjmp upz
                                 sub10_zu:
000215 1b30                      	 sub r19,r16
000216 9523                      	 inc r18
000217 1730                      	 cp r19,r16
000218 f7e0                      	 brsh sub10_zu
000219 e040                      	 ldi r20,0
                                 upz:
00021a e800
00021b d1a1
00021c d1b0                      	do_lcd_command 0b10000000
00021d e208
00021e d1a5
00021f d1ad                      	do_lcd_data'('
000220 e300
000221 d1a2
000222 d1aa                      	do_lcd_data'0'
000223 e20c
000224 d19f
000225 d1a7                      	do_lcd_data','
000226 e300
000227 d19c
000228 d1a4                      	do_lcd_data'0'
000229 e209
00022a d199
00022b d1a1                      	do_lcd_data')'
00022c e200
00022d d196
00022e d19e                      	do_lcd_data' '
                                 
00022f 9543                      	inc r20
000230 9533                      	inc r19
000231 e000                      	ldi r16,0
000232 1f20                      	adc r18,r16
000233 9488                      	clc
000234 e300                      	ldi r16,'0'
000235 0f02                      	add r16,r18
000236 d18d                      	rcall lcd_data
000237 d195                      	rcall lcd_wait
000238 e300                      	ldi r16,'0'
000239 0f03                      	add r16,r19
00023a d189                      	rcall lcd_data
00023b d191                      	rcall lcd_wait
00023c e000                      	ldi r16,0
00023d d1af                      	rcall delay1s_0
00023e e005                      	ldi r16,5
00023f 1740                      	cp r20,r16
000240 f6c9                      	brne upz
                                 startsea:
000241 ec00
000242 d17a
000243 d189                      	do_lcd_command 0b11000000
000244 e703
000245 d17e
000246 d186                      	do_lcd_data's'
000247 e704
000248 d17b
000249 d183                      	do_lcd_data't'
00024a e601
00024b d178
00024c d180                      	do_lcd_data'a'
00024d e704
00024e d175
00024f d17d                      	do_lcd_data't'
000250 e705
000251 d172
000252 d17a                      	do_lcd_data'u'
000253 e703
000254 d16f
000255 d177                      	do_lcd_data's'
000256 e30a
000257 d16c
000258 d174                      	do_lcd_data':'
000259 e503
00025a d169
00025b d171                      	do_lcd_data'S'
00025c e405
00025d d166
00025e d16e                      	do_lcd_data'E'
00025f e400                      	ldi r16,0b01000000
000260 2ba0                      	or r26,r16
000261 e070                      	ldi r23,0
000262 e0f7                      	ldi ZH, high(table<<1) ; initialize Z 
000263 eee8                      	ldi ZL, low(table<<1)
000264 e010                      	ldi r17,0
000265 e050                      	ldi r21,0
                                 comp:
000266 e000                      	ldi r16,0
                                 delay1s_5:
000267 d176                      	rcall sleep_1ms
000268 e031                      	ldi r19,1
000269 0f03                      	add r16,r19
00026a e634                      	ldi r19,100
00026b 1730                      	cp r19,r16
00026c f7d1                      	brne delay1s_5
00026d 2f31                      	mov r19,r17
00026e e800
00026f d14d
000270 d15c                      	do_lcd_command 0b10000000
000271 e208
000272 d151
000273 d159                      	do_lcd_data'('
000274 2f31                      	mov r19,r17
000275 d0e9                      	rcall getnum
000276 2f13                      	mov r17,r19
000277 e20c
000278 d14b
000279 d153                      	do_lcd_data','
00027a 2f35                      	mov r19,r21
00027b d0e3                      	rcall getnum
00027c 2f53                      	mov r21,r19
00027d e209
00027e d145
00027f d14d                      	do_lcd_data')'
000280 e200
000281 d142
000282 d14a                      	do_lcd_data' '
000283 9164                      	lpm r22,Z
000284 e005                      	ldi r16,5
000285 0f60                      	add r22,r16
000286 2f36                      	mov r19,r22
000287 d0d7                      	rcall getnum
000288 e200
000289 d13a
00028a d142                      	do_lcd_data' '
00028b 2f63                      	mov r22,r19
                                 
00028c fda5                      	sbrc r26,5
00028d c04d                      	rjmp back
00028e fda4                      	sbrc r26,4
00028f c04b                      	rjmp back
000290 1621                      	cp r2,r17
000291 f009                      	breq cpb
000292 c09a                      	rjmp oe
                                 cpb:
000293 1635                      	cp r3,r21
000294 f009                      	breq found
000295 c097                      	rjmp oe
                                 found:
000296 e1bf                      	ldi r27,0x1F
000297 93b0 009a                 	sts OCR3BL,r27
000299 2e46                      	mov r4,r22
00029a ec00
00029b d121
00029c d130                      	do_lcd_command 0b11000000
00029d e703
00029e d125
00029f d12d                      	do_lcd_data's'
0002a0 e704
0002a1 d122
0002a2 d12a                      	do_lcd_data't'
0002a3 e601
0002a4 d11f
0002a5 d127                      	do_lcd_data'a'
0002a6 e704
0002a7 d11c
0002a8 d124                      	do_lcd_data't'
0002a9 e705
0002aa d119
0002ab d121                      	do_lcd_data'u'
0002ac e703
0002ad d116
0002ae d11e                      	do_lcd_data's'
0002af e30a
0002b0 d113
0002b1 d11b                      	do_lcd_data':'
0002b2 e406
0002b3 d110
0002b4 d118                      	do_lcd_data'F'
0002b5 e40f
0002b6 d10d
0002b7 d115                      	do_lcd_data'O'
0002b8 ef4f                      	ldi temp1,0b11111111
0002b9 9340 010b                 	sts PORTL,temp1
0002bb e000                      	ldi r16,0
0002bc d130                      	rcall delay1s_0
0002bd e040                      	ldi temp1,0b00000000
0002be 9340 010b                 	sts PORTL,temp1
0002c0 e000                      	ldi r16,0
0002c1 d12b                      	rcall delay1s_0
0002c2 ef4f                      	ldi temp1,0b11111111
0002c3 9340 010b                 	sts PORTL,temp1
0002c5 e000                      	ldi r16,0
0002c6 d126                      	rcall delay1s_0
0002c7 e040                      	ldi temp1,0b00000000
0002c8 9340 010b                 	sts PORTL,temp1
0002ca d122                      	rcall delay1s_0
0002cb ef4f                      	ldi temp1,0b11111111
0002cc 9340 010b                 	sts PORTL,temp1
0002ce e000                      	ldi r16,0
0002cf d11d                      	rcall delay1s_0
0002d0 e040                      	ldi temp1,0b00000000
0002d1 9340 010b                 	sts PORTL,temp1
0002d3 e000                      	ldi r16,0
0002d4 d118                      	rcall delay1s_0
0002d5 e200                      	ldi r16,0b00100000
0002d6 2ba0                      	or r26,r16
0002d7 efbf                      	ldi r27,0xFF
0002d8 93b0 009a                 	sts OCR3BL,r27`
0002da cf8b                      	rjmp comp
                                 
                                 back:
0002db fda6                      	sbrc r26,6
0002dc c046                      	rjmp odd0
                                 
0002dd e30f                      	ldi r16,63
0002de 1710                      	cp r17,r16
0002df f039                      	breq set63
0002e0 9513                      	inc r17
0002e1 e001                      	ldi r16,1
0002e2 0fe0                      	add r30,r16
0002e3 e000                      	ldi r16,0
0002e4 1ff0                      	adc r31,r16
0002e5 9488                      	clc
0002e6 cf7f                      	rjmp comp
                                 set63:
0002e7 e31f                      	ldi r17,63
0002e8 955a                      	dec r21
0002e9 e400                      	ldi r16,64
0002ea 1be0                      	sub r30,r16
0002eb e000                      	ldi r16,0
0002ec 0bf0                      	sbc r31,r16
0002ed 9488                      	clc
0002ee e400                      	ldi r16,0b01000000
0002ef 2ba0                      	or r26,r16
0002f0 cf75                      	rjmp comp
                                 
                                 dee:
0002f1 e000                      	ldi r16,0
0002f2 1750                      	cp r21,r16
0002f3 f041                      	breq endi
0002f4 955a                      	dec r21
0002f5 e400                      	ldi r16,64
0002f6 1be0                      	sub r30,r16
0002f7 e000                      	ldi r16,0
0002f8 0bf0                      	sbc r31,r16
0002f9 9488                      	clc
0002fa 7baf                      	andi r26,0b10111111
0002fb cf6a                      	rjmp comp
                                 	
                                 endi: 
0002fc ffa5                      	sbrs r26,5
0002fd c07f                      	rjmp unfound
                                 delay1s_8:
0002fe d0df                      	rcall sleep_1ms
0002ff e031                      	ldi r19,1
000300 0f03                      	add r16,r19
000301 e634                      	ldi r19,100
000302 1730                      	cp r19,r16
000303 f7d1                      	brne delay1s_8
000304 2f31                      	mov r19,r17
000305 e800
000306 d0b6
000307 d0c5                      	do_lcd_command 0b10000000
000308 e208
000309 d0ba
00030a d0c2                      	do_lcd_data'('
00030b 2d32                      	mov r19,r2
00030c d052                      	rcall getnum
00030d e20c
00030e d0b5
00030f d0bd                      	do_lcd_data','
000310 2d33                      	mov r19,r3
000311 d04d                      	rcall getnum
000312 e20c
000313 d0b0
000314 d0b8                      	do_lcd_data','
000315 2d34                      	mov r19,r4
000316 e005                      	ldi r16,5
000317 1b30                      	sub r19,r16
000318 d046                      	rcall getnum
000319 e209
00031a d0a9
00031b d0b1                      	do_lcd_data')'
00031c e200
00031d d0a6
00031e d0ae                      	do_lcd_data' '
                                 
                                 eddd:
00031f e040                      	ldi temp1,0x00
000320 9340 009a                 	sts OCR3BL,temp1`
000322 cffc                      	rjmp eddd
                                 odd0:
000323 e000                      	ldi r16,0
000324 1710                      	cp r17,r16
000325 f259                      	breq dee
000326 951a                      	dec r17
000327 e001                      	ldi r16,1
000328 1be0                      	sub r30,r16
000329 e000                      	ldi r16,0
00032a 0bf0                      	sbc r31,r16
00032b 9488                      	clc
00032c cf39                      	rjmp comp
                                 
                                 oe:
00032d fda6                      	sbrc r26,6
00032e c018                      	rjmp odd
00032f e000                      	ldi r16,0
000330 1710                      	cp r17,r16
000331 f039                      	breq pl11
000332 951a                      	dec r17
000333 e001                      	ldi r16,1
000334 1be0                      	sub r30,r16
000335 e000                      	ldi r16,0
000336 0bf0                      	sbc r31,r16
000337 9488                      	clc
000338 cf2d                      	rjmp comp
                                 
                                 pl11:
000339 e010                      	ldi r17,0
00033a 9553                      	inc r21
00033b e400                      	ldi r16,64
00033c 0fe0                      	add r30,r16
00033d e000                      	ldi r16,0
00033e 1ff0                      	adc r31,r16
00033f 9488                      	clc
000340 e070                      	ldi r23,0
000341 e400                      	ldi r16,0b01000000
000342 2ba0                      	or r26,r16
000343 e200
000344 d07f
000345 d087                      	do_lcd_data' '
000346 cf1f                      	rjmp comp
                                 odd:
000347 e30f                      	ldi r16,63
000348 1710                      	cp r17,r16
000349 f051                      	breq mul64
00034a 9513                      	inc r17
00034b e001                      	ldi r16,1
00034c 0fe0                      	add r30,r16
00034d e000                      	ldi r16,0
00034e 1ff0                      	adc r31,r16
00034f 9488                      	clc 
000350 e200
000351 d072
000352 d07a                      	do_lcd_data' '
000353 cf12                      	rjmp comp
                                 
                                 mul64:
                                 
000354 e400                      	ldi r16,64
000355 0fe0                      	add r30,r16
000356 e000                      	ldi r16,0
000357 1ff0                      	adc r31,r16
000358 9488                      	clc
000359 9553                      	inc r21
00035a 7baf                      	andi r26,0b10111111
00035b e200
00035c d067
00035d d06f                      	do_lcd_data' '
00035e cf07                      	rjmp comp
                                 
                                 getnum:
00035f e020                      	ldi r18,0
000360 e00a                      	ldi r16,10
000361 1730                      	cp r19,r16
000362 f428                      	brsh sub10_num
000363 e300                      	ldi r16,'0'
000364 0f03                      	add r16,r19
000365 d05e                      	rcall lcd_data
000366 d066                      	rcall lcd_wait
000367 9508                      	ret
                                 sub10_num:
000368 1b30                      	 sub r19,r16
000369 9523                      	 inc r18
00036a 1730                      	 cp r19,r16
00036b f7e0                      	 brsh sub10_num
00036c e300                      	 ldi r16,'0'
00036d 0f02                      	 add r16,r18
00036e d055                      	 rcall lcd_data
00036f d05d                      	 rcall lcd_wait
000370 e300                      	 ldi r16,'0'
000371 0f03                      	 add r16,r19
000372 d051                      	 rcall lcd_data
000373 d059                      	 rcall lcd_wait
000374 e00a                      	 ldi r16,10
000375 9f20                      	mul r18,r16
000376 2d20                      	mov r18,r0
000377 0f32                      	add r19,r18
000378 9508                      	 ret
                                 	 
                                 	
                                 end:
000379 e040                      	ldi temp1,0x00
00037a 9340 009a                 	sts OCR3BL,temp1`
00037c cffc                      	rjmp end
                                 
                                 
                                 unfound:
00037d ec00
00037e d03e
00037f d04d                      	do_lcd_command 0b11000000
000380 e703
000381 d042
000382 d04a                      	do_lcd_data's'
000383 e704
000384 d03f
000385 d047                      	do_lcd_data't'
000386 e601
000387 d03c
000388 d044                      	do_lcd_data'a'
000389 e704
00038a d039
00038b d041                      	do_lcd_data't'
00038c e705
00038d d036
00038e d03e                      	do_lcd_data'u'
00038f e703
000390 d033
000391 d03b                      	do_lcd_data's'
000392 e30a
000393 d030
000394 d038                      	do_lcd_data':'
000395 e505
000396 d02d
000397 d035                      	do_lcd_data'U'
000398 e406
000399 d02a
00039a d032                      	do_lcd_data'F'
00039b e800
00039c d020
00039d d02f                      	do_lcd_command 0b10000000
00039e e208
00039f d024
0003a0 d02c                      	do_lcd_data'('
0003a1 e300
0003a2 d021
0003a3 d029                      	do_lcd_data'0'
0003a4 e20c
0003a5 d01e
0003a6 d026                      	do_lcd_data','
0003a7 e300
0003a8 d01b
0003a9 d023                      	do_lcd_data'0'
0003aa e20c
0003ab d018
0003ac d020                      	do_lcd_data','
0003ad e300
0003ae d015
0003af d01d                      	do_lcd_data'0'
0003b0 e209
0003b1 d012
0003b2 d01a                      	do_lcd_data')'
0003b3 e401
0003b4 d00f
0003b5 d017                      	do_lcd_data'A'
0003b6 e602
0003b7 d00c
0003b8 d014                      	do_lcd_data'b'
0003b9 e200
0003ba d009
0003bb d011                      	do_lcd_data' '
0003bc cfbc                      	rjmp end
                                 
                                 .macro lcd_set
                                 	sbi LCD_CTRL_PORT, @0
                                 .endmacro
                                 .macro lcd_clr
                                 	cbi LCD_CTRL_PORT, @0
                                 .endmacro
                                 
                                 ;
                                 ; Send a command to the LCD (r16)
                                 ;
                                 
                                 lcd_command:
0003bd bb01                      	STORE LCD_DATA_PORT, r16 //RS = 0, RW = 0 for a command write
0003be d01f                      	rcall sleep_1ms //delay to meet timing (Set up time)
0003bf 9a16                      	lcd_set LCD_E //turn on the enable pin
0003c0 d01d                      	rcall sleep_1ms //delay to meet timing (Enable pulse width)
0003c1 9816                      	lcd_clr LCD_E //turn off the enable pin
0003c2 d01b                      	rcall sleep_1ms //delay to meet timing (Enable cycle time)
0003c3 9508                      	ret
                                 
                                 lcd_data:
0003c4 bb01                      	STORE LCD_DATA_PORT, r16 //set the data port's value up
0003c5 9a17                      	lcd_set LCD_RS //RS = 1, RW = 0 for a data write
0003c6 d017                      	rcall sleep_1ms //delay to meet timing (Set up time)
0003c7 9a16                      	lcd_set LCD_E //turn on the enable pin
0003c8 d015                      	rcall sleep_1ms //delay to meet timing (Enable pulse width)
0003c9 9816                      	lcd_clr LCD_E //turn off the enable pin
0003ca d013                      	rcall sleep_1ms //delay to meet timing (Enable cycle time)
0003cb 9817                      	lcd_clr LCD_RS //RS = 0 stop writing
0003cc 9508                      	ret
                                 
                                 lcd_wait: //set portf for input,close output
0003cd 930f                      	push r16
0003ce 2700                      	clr r16
0003cf bb00                      	STORE LCD_DATA_DDR, r16
0003d0 bb01                      	STORE LCD_DATA_PORT, r16
0003d1 9a15                      	lcd_set LCD_RW // for read
                                 lcd_wait_loop: 
0003d2 d00b                      	rcall sleep_1ms
0003d3 9a16                      	lcd_set LCD_E
0003d4 d009                      	rcall sleep_1ms
0003d5 b10f                      	LOAD r16, LCD_DATA_PIN //load data to r16
0003d6 9816                      	lcd_clr LCD_E
0003d7 fd07                      	sbrc r16, 7//check busy flag 
0003d8 cff9                      	rjmp lcd_wait_loop
0003d9 9815                      	lcd_clr LCD_RW
0003da ef0f                      	ser r16
0003db bb00                      	STORE LCD_DATA_DDR, r16
0003dc 910f                      	pop r16
0003dd 9508                      	ret
                                 
                                 .equ F_CPU = 16000000
                                 .equ DELAY_1MS = F_CPU / 4 / 1000 - 4
                                 ; 4 cycles per iteration - setup/call-return overhead
                                 
                                 sleep_1ms:
0003de 938f                      	push r24
0003df 939f                      	push r25
0003e0 e09f                      	ldi r25, high(DELAY_1MS)
0003e1 e98c                      	ldi r24, low(DELAY_1MS)
                                 delayloop_1ms:
0003e2 9701                      	sbiw r25:r24, 1
0003e3 f7f1                      	brne delayloop_1ms
0003e4 919f                      	pop r25
0003e5 918f                      	pop r24
0003e6 9508                      	ret
                                 
                                 sleep_5ms:
0003e7 dff6                      	rcall sleep_1ms
0003e8 dff5                      	rcall sleep_1ms
0003e9 dff4                      	rcall sleep_1ms
0003ea dff3                      	rcall sleep_1ms
0003eb dff2                      	rcall sleep_1ms
0003ec 9508                      	ret
                                 
                                 delay1s_0:
0003ed dff0                      	rcall sleep_1ms
0003ee e081                      	ldi r24,1
0003ef 0f08                      	add r16,r24
0003f0 e684                      	ldi r24,100
0003f1 1780                      	cp r24,r16
0003f2 f7d1                      	brne delay1s_0
0003f3 9518                      	reti
                                 
                                 
0003f4 0a0a
0003f5 0a0a
0003f6 0a0a
0003f7 0a0a
0003f8 0a0a
0003f9 0a0a
0003fa 0a0a
0003fb 0a0a
0003fc 0a0a
0003fd 0a0a
0003fe 0a0a
0003ff 0a0a
000400 0a0a
000401 0a0a
000402 0a0a
000403 0a0a
000404 1414
000405 1414
000406 1414
000407 1414
000408 1414
000409 1414
00040a 1414
00040b 1414
00040c 0a0a
00040d 0a0a
00040e 0a0a
00040f 0a0a
000410 0a0a
000411 0a0a
000412 0a0a
000413 0a0a
000414 0f0a
000415 0f0f
000416 0f0f
000417 0f0f
000418 0f0f
000419 0f0f
00041a 0f0f
00041b 0a0f
00041c 0a0a
00041d 0a0a
00041e 0a0a
00041f 0a0a
000420 0a0a
000421 0a0a
000422 0a0a
000423 0a0a
000424 1414
000425 1414
000426 1414
000427 1414
000428 1414
000429 1414
00042a 1414
00042b 1414
00042c 0f0a
00042d 0f0f
00042e 0f0f
00042f 0f0f
000430 0f0f
000431 0f0f
000432 0f0f
000433 0a0f
000434 0f0a
000435 1414
000436 1414
000437 1414
000438 1414
000439 1414
00043a 1414
00043b 0a0f
00043c 0a0a
00043d 0a0a
00043e 0a0a
00043f 0a0a
000440 0a0a
000441 0a0a
000442 0a0a
000443 0a0a
000444 1414
000445 1414
000446 1414
000447 1414
000448 1414
000449 1414
00044a 1414
00044b 1414
00044c 0f0a
00044d 1414
00044e 1414
00044f 1414
000450 1414
000451 1414
000452 1414
000453 0a0f
000454 0f0a
000455 1914
000456 1919
000457 1919
000458 1919
000459 1919
00045a 1419
00045b 0a0f
00045c 0a0a
00045d 0a0a
00045e 0a0a
00045f 0a0a
000460 0a0a
000461 0a0a
000462 0a0a
000463 0a0a
000464 1414
000465 1414
000466 1414
000467 1414
000468 1414
000469 1414
00046a 1414
00046b 1414
00046c 0f0a
00046d 1914
00046e 1919
00046f 1919
000470 1919
000471 1919
000472 1419
000473 0a0f
000474 0f0a
000475 1914
000476 1e1e
000477 1e1e
000478 1e1e
000479 1e1e
00047a 1419
00047b 0a0f
00047c 0a0a
00047d 0a0a
00047e 0a0a
00047f 0a0a
000480 0a0a
000481 0a0a
000482 0a0a
000483 0a0a
000484 1414
000485 1414
000486 1414
000487 1414
000488 1414
000489 1414
00048a 1414
00048b 1414
00048c 0f0a
00048d 1914
00048e 1e1e
00048f 1e1e
000490 1e1e
000491 1e1e
000492 1419
000493 0a0f
000494 0f0a
000495 1914
000496 231e
000497 2323
000498 2323
000499 1e23
00049a 1419
00049b 0a0f
00049c 0a0a
00049d 0a0a
00049e 0a0a
00049f 0a0a
0004a0 0a0a
0004a1 0a0a
0004a2 0a0a
0004a3 0a0a
0004a4 1414
0004a5 1414
0004a6 1414
0004a7 1414
0004a8 1414
0004a9 1414
0004aa 1414
0004ab 1414
0004ac 0f0a
0004ad 1914
0004ae 231e
0004af 2323
0004b0 2323
0004b1 1e23
0004b2 1419
0004b3 0a0f
0004b4 0f0a
0004b5 1914
0004b6 231e
0004b7 2828
0004b8 2828
0004b9 1e23
0004ba 1419
0004bb 0a0f
0004bc 0a0a
0004bd 0a0a
0004be 0a0a
0004bf 0a0a
0004c0 0a0a
0004c1 0a0a
0004c2 0a0a
0004c3 0a0a
0004c4 1414
0004c5 1414
0004c6 1414
0004c7 1414
0004c8 1414
0004c9 1414
0004ca 1414
0004cb 1414
0004cc 0f0a
0004cd 1914
0004ce 231e
0004cf 2828
0004d0 2828
0004d1 1e23
0004d2 1419
0004d3 0a0f
0004d4 0f0a
0004d5 1914
0004d6 231e
0004d7 2d28
0004d8 282d
0004d9 1e23
0004da 1419
0004db 0a0f
0004dc 0a0a
0004dd 0a0a
0004de 0a0a
0004df 0a0a
0004e0 0a0a
0004e1 0a0a
0004e2 0a0a
0004e3 0a0a
0004e4 1414
0004e5 1414
0004e6 1414
0004e7 1414
0004e8 1414
0004e9 1414
0004ea 1414
0004eb 1414
0004ec 0f0a
0004ed 1914
0004ee 231e
0004ef 2d28
0004f0 282d
0004f1 1e23
0004f2 1419
0004f3 0a0f
0004f4 0f0a
0004f5 1914
0004f6 231e
0004f7 2d28
0004f8 282d
0004f9 1e23
0004fa 1419
0004fb 0a0f
0004fc 0a0a
0004fd 0a0a
0004fe 0a0a
0004ff 0a0a
000500 0a0a
000501 0a0a
000502 0a0a
000503 0a0a
000504 1414
000505 1414
000506 1414
000507 1414
000508 1414
000509 1414
00050a 1414
00050b 1414
00050c 0f0a
00050d 1914
00050e 231e
00050f 2d28
000510 282d
000511 1e23
000512 1419
000513 0a0f
000514 0f0a
000515 1914
000516 231e
000517 2828
000518 2828
000519 1e23
00051a 1419
00051b 0a0f
00051c 0a0a
00051d 0a0a
00051e 0a0a
00051f 0a0a
000520 0a0a
000521 0a0a
000522 0a0a
000523 0a0a
000524 1414
000525 1414
000526 1414
000527 1414
000528 1414
000529 1414
00052a 1414
00052b 1414
00052c 0f0a
00052d 1914
00052e 231e
00052f 2828
000530 2828
000531 1e23
000532 1419
000533 0a0f
000534 0f0a
000535 1914
000536 231e
000537 2323
000538 2323
000539 1e23
00053a 1419
00053b 0a0f
00053c 0a0a
00053d 0a0a
00053e 0a0a
00053f 0a0a
000540 0a0a
000541 0a0a
000542 0a0a
000543 0a0a
000544 1414
000545 1414
000546 1414
000547 1414
000548 1414
000549 1414
00054a 1414
00054b 1414
00054c 0f0a
00054d 1914
00054e 231e
00054f 2323
000550 2323
000551 1e23
000552 1419
000553 0a0f
000554 0f0a
000555 1914
000556 1e1e
000557 1e1e
000558 1e1e
000559 1e1e
00055a 1419
00055b 0a0f
00055c 0a0a
00055d 0a0a
00055e 0a0a
00055f 0a0a
000560 0a0a
000561 0a0a
000562 0a0a
000563 0a0a
000564 1414
000565 1414
000566 1414
000567 1414
000568 1414
000569 1414
00056a 1414
00056b 1414
00056c 0f0a
00056d 1914
00056e 1e1e
00056f 1e1e
000570 1e1e
000571 1e1e
000572 1419
000573 0a0f
000574 0f0a
000575 1914
000576 1919
000577 1919
000578 1919
000579 1919
00057a 1419
00057b 0a0f
00057c 0a0a
00057d 0a0a
00057e 0a0a
00057f 0a0a
000580 0a0a
000581 0a0a
000582 0a0a
000583 0a0a
000584 1414
000585 1414
000586 1414
000587 1414
000588 1414
000589 1414
00058a 1414
00058b 1414
00058c 0f0a
00058d 1914
00058e 1919
00058f 1919
000590 1919
000591 1919
000592 1419
000593 0a0f
000594 0f0a
000595 1414
000596 1414
000597 1414
000598 1414
000599 1414
00059a 1414
00059b 0a0f
00059c 0a0a
00059d 0a0a
00059e 0a0a
00059f 0a0a
0005a0 0a0a
0005a1 0a0a
0005a2 0a0a
0005a3 0a0a
0005a4 1414
0005a5 1414
0005a6 1414
0005a7 1414
0005a8 1414
0005a9 1414
0005aa 1414
0005ab 1414
0005ac 0f0a
0005ad 1414
0005ae 1414
0005af 1414
0005b0 1414
0005b1 1414
0005b2 1414
0005b3 0a0f
0005b4 0f0a
0005b5 0f0f
0005b6 0f0f
0005b7 0f0f
0005b8 0f0f
0005b9 0f0f
0005ba 0f0f
0005bb 0a0f
0005bc 0a0a
0005bd 0a0a
0005be 0a0a
0005bf 0a0a
0005c0 0a0a
0005c1 0a0a
0005c2 0a0a
0005c3 0a0a
0005c4 1414
0005c5 1414
0005c6 1414
0005c7 1414
0005c8 1414
0005c9 1414
0005ca 1414
0005cb 1414
0005cc 0f0a
0005cd 0f0f
0005ce 0f0f
0005cf 0f0f
0005d0 0f0f
0005d1 0f0f
0005d2 0f0f
0005d3 0a0f
0005d4 0a0a
0005d5 0a0a
0005d6 0a0a
0005d7 0a0a
0005d8 0a0a
0005d9 0a0a
0005da 0a0a
0005db 0a0a
0005dc 0a0a
0005dd 0a0a
0005de 0a0a
0005df 0a0a
0005e0 0a0a
0005e1 0a0a
0005e2 0a0a
0005e3 0a0a
0005e4 1414
0005e5 1414
0005e6 1414
0005e7 1414
0005e8 1414
0005e9 1414
0005ea 1414
0005eb 1414
0005ec 0a0a
0005ed 0a0a
0005ee 0a0a
0005ef 0a0a
0005f0 0a0a
0005f1 0a0a
0005f2 0a0a
0005f3 0a0a
0005f4 0a0a
0005f5 0a0a
0005f6 0a0a
0005f7 0a0a
0005f8 1414
0005f9 1414
0005fa 1414
0005fb 1414
0005fc 1414
0005fd 1414
0005fe 1414
0005ff 1414
000600 1414
000601 1414
000602 1414
000603 1414
000604 1414
000605 1414
000606 1414
000607 1414
000608 1414
000609 1414
00060a 1414
00060b 1414
00060c 1414
00060d 1414
00060e 1414
00060f 1414
000610 0a0a
000611 0a0a
000612 0a0a
000613 0a0a
000614 0a0a
000615 0a0a
000616 0a0a
000617 0a0a
000618 1414
000619 1414
00061a 1414
00061b 1414
00061c 1914
00061d 1919
00061e 1919
00061f 1919
000620 1919
000621 1919
000622 1919
000623 1419
000624 1914
000625 1919
000626 1919
000627 1919
000628 1919
000629 1919
00062a 1919
00062b 1419
00062c 1414
00062d 1414
00062e 1414
00062f 1414
000630 0a0a
000631 0a0a
000632 0a0a
000633 0a0a
000634 0a0a
000635 0a0a
000636 0a0a
000637 0a0a
000638 1414
000639 1414
00063a 1414
00063b 1414
00063c 1914
00063d 1e1e
00063e 1e1e
00063f 1e1e
000640 1e1e
000641 1e1e
000642 1e1e
000643 1419
000644 1914
000645 1e1e
000646 1e1e
000647 1e1e
000648 1e1e
000649 1e1e
00064a 1e1e
00064b 1419
00064c 1414
00064d 1414
00064e 1414
00064f 1414
000650 0a0a
000651 0a0a
000652 0a0a
000653 0a0a
000654 0a0a
000655 0a0a
000656 0a0a
000657 0a0a
000658 1414
000659 1414
00065a 1414
00065b 1414
00065c 1914
00065d 231e
00065e 2323
00065f 2323
000660 2323
000661 2323
000662 1e23
000663 1419
000664 1914
000665 231e
000666 2323
000667 2323
000668 2323
000669 2323
00066a 1e23
00066b 1419
00066c 1414
00066d 1414
00066e 1414
00066f 1414
000670 0a0a
000671 0a0a
000672 0a0a
000673 0a0a
000674 0a0a
000675 0a0a
000676 0a0a
000677 0a0a
000678 1414
000679 1414
00067a 1414
00067b 1414
00067c 1914
00067d 231e
00067e 2828
00067f 2828
000680 2828
000681 2828
000682 1e23
000683 1419
000684 1914
000685 231e
000686 2828
000687 2828
000688 2828
000689 2828
00068a 1e23
00068b 1419
00068c 1414
00068d 1414
00068e 1414
00068f 1414
000690 0a0a
000691 0a0a
000692 0a0a
000693 0a0a
000694 0a0a
000695 0a0a
000696 0a0a
000697 0a0a
000698 1414
000699 1414
00069a 1414
00069b 1414
00069c 1914
00069d 231e
00069e 2d28
00069f 2d2d
0006a0 2d2d
0006a1 282d
0006a2 1e23
0006a3 1419
0006a4 1914
0006a5 231e
0006a6 2d28
0006a7 2d2d
0006a8 2d2d
0006a9 282d
0006aa 1e23
0006ab 1419
0006ac 1414
0006ad 1414
0006ae 1414
0006af 1414
0006b0 0a0a
0006b1 0a0a
0006b2 0a0a
0006b3 0a0a
0006b4 0a0a
0006b5 0a0a
0006b6 0a0a
0006b7 0a0a
0006b8 1414
0006b9 1414
0006ba 1414
0006bb 1414
0006bc 1914
0006bd 231e
0006be 2d28
0006bf 3232
0006c0 3232
0006c1 282d
0006c2 1e23
0006c3 1419
0006c4 1914
0006c5 231e
0006c6 2d28
0006c7 3232
0006c8 3232
0006c9 282d
0006ca 1e23
0006cb 1419
0006cc 1414
0006cd 1414
0006ce 1414
0006cf 1414
0006d0 0a0a
0006d1 0a0a
0006d2 0a0a
0006d3 0a0a
0006d4 0a0a
0006d5 0a0a
0006d6 0a0a
0006d7 0a0a
0006d8 1414
0006d9 1414
0006da 1414
0006db 1414
0006dc 1914
0006dd 231e
0006de 2d28
0006df 3732
0006e0 3237
0006e1 282d
0006e2 1e23
0006e3 1419
0006e4 1914
0006e5 231e
0006e6 2d28
0006e7 3732
0006e8 3237
0006e9 282d
0006ea 1e23
0006eb 1419
0006ec 1414
0006ed 1414
0006ee 1414
0006ef 1414
0006f0 0a0a
0006f1 0a0a
0006f2 0a0a
0006f3 0a0a
0006f4 0a0a
0006f5 0a0a
0006f6 0a0a
0006f7 0a0a
0006f8 1414
0006f9 1414
0006fa 1414
0006fb 1414
0006fc 1914
0006fd 231e
0006fe 2d28
0006ff 3732
000700 3237
000701 282d
000702 1e23
000703 1419
000704 1914
000705 231e
000706 2d28
000707 3732
000708 3237
000709 282d
00070a 1e23
00070b 1419
00070c 1414
00070d 1414
00070e 1414
00070f 1414
000710 0a0a
000711 0a0a
000712 0a0a
000713 0a0a
000714 0a0a
000715 0a0a
000716 0a0a
000717 0a0a
000718 1414
000719 1414
00071a 1414
00071b 1414
00071c 1914
00071d 231e
00071e 2d28
00071f 3232
000720 3232
000721 282d
000722 1e23
000723 1419
000724 1914
000725 231e
000726 2d28
000727 3232
000728 3232
000729 282d
00072a 1e23
00072b 1419
00072c 1414
00072d 1414
00072e 1414
00072f 1414
000730 0a0a
000731 0a0a
000732 0a0a
000733 0a0a
000734 0a0a
000735 0a0a
000736 0a0a
000737 0a0a
000738 1414
000739 1414
00073a 1414
00073b 1414
00073c 1914
00073d 231e
00073e 2d28
00073f 2d2d
000740 2d2d
000741 282d
000742 1e23
000743 1419
000744 1914
000745 231e
000746 2d28
000747 2d2d
000748 2d2d
000749 282d
00074a 1e23
00074b 1419
00074c 1414
00074d 1414
00074e 1414
00074f 1414
000750 0a0a
000751 0a0a
000752 0a0a
000753 0a0a
000754 0a0a
000755 0a0a
000756 0a0a
000757 0a0a
000758 1414
000759 1414
00075a 1414
00075b 1414
00075c 1914
00075d 231e
00075e 2828
00075f 2828
000760 2828
000761 2828
000762 1e23
000763 1419
000764 1914
000765 231e
000766 2828
000767 2828
000768 2828
000769 2828
00076a 1e23
00076b 1419
00076c 1414
00076d 1414
00076e 1414
00076f 1414
000770 0a0a
000771 0a0a
000772 0a0a
000773 0a0a
000774 0a0a
000775 0a0a
000776 0a0a
000777 0a0a
000778 1414
000779 1414
00077a 1414
00077b 1414
00077c 1914
00077d 231e
00077e 2323
00077f 2323
000780 2323
000781 2323
000782 1e23
000783 1419
000784 1914
000785 231e
000786 2323
000787 2323
000788 2323
000789 2323
00078a 1e23
00078b 1419
00078c 1414
00078d 1414
00078e 1414
00078f 1414
000790 0a0a
000791 0a0a
000792 0a0a
000793 0a0a
000794 0a0a
000795 0a0a
000796 0a0a
000797 0a0a
000798 1414
000799 1414
00079a 1414
00079b 1414
00079c 1914
00079d 1e1e
00079e 1e1e
00079f 1e1e
0007a0 1e1e
0007a1 1e1e
0007a2 1e1e
0007a3 1419
0007a4 1914
0007a5 1e1e
0007a6 1e1e
0007a7 1e1e
0007a8 1e1e
0007a9 1e1e
0007aa 1e1e
0007ab 1419
0007ac 1414
0007ad 1414
0007ae 1414
0007af 1414
0007b0 0a0a
0007b1 0a0a
0007b2 0a0a
0007b3 0a0a
0007b4 0a0a
0007b5 0a0a
0007b6 0a0a
0007b7 0a0a
0007b8 1414
0007b9 1414
0007ba 1414
0007bb 1414
0007bc 1914
0007bd 1919
0007be 1919
0007bf 1919
0007c0 1919
0007c1 1919
0007c2 1919
0007c3 1419
0007c4 1914
0007c5 1919
0007c6 1919
0007c7 1919
0007c8 1919
0007c9 1919
0007ca 1919
0007cb 1419
0007cc 1414
0007cd 1414
0007ce 1414
0007cf 1414
0007d0 0a0a
0007d1 0a0a
0007d2 0a0a
0007d3 0a0a
0007d4 0a0a
0007d5 0a0a
0007d6 0a0a
0007d7 0a0a
0007d8 1414
0007d9 1414
0007da 1414
0007db 1414
0007dc 1414
0007dd 1414
0007de 1414
0007df 1414
0007e0 1414
0007e1 1414
0007e2 1414
0007e3 1414
0007e4 1414
0007e5 1414
0007e6 1414
0007e7 1414
0007e8 1414
0007e9 1414
0007ea 1414
0007eb 1414
0007ec 1414
0007ed 1414
0007ee 1414
0007ef 1414
0007f0 0a0a
0007f1 0a0a
0007f2 0a0a
0007f3 0a0a
0007f4 1414
0007f5 1414
0007f6 1414
0007f7 1414
0007f8 0a0a
0007f9 0a0a
0007fa 0a0a
0007fb 0a0a
0007fc 1414
0007fd 1414
0007fe 1414
0007ff 1414
000800 1414
000801 1414
000802 1414
000803 1414
000804 1414
000805 1414
000806 1414
000807 1414
000808 1414
000809 1414
00080a 1414
00080b 1414
00080c 0a0a
00080d 0a0a
00080e 0a0a
00080f 0a0a
000810 1414
000811 1414
000812 1414
000813 1414
000814 1414
000815 1414
000816 1414
000817 1414
000818 0a0a
000819 0a0a
00081a 0a0a
00081b 0a0a
00081c 1914
00081d 1919
00081e 1919
00081f 1919
000820 1919
000821 1919
000822 1919
000823 1419
000824 1914
000825 1919
000826 1919
000827 1919
000828 1919
000829 1919
00082a 1919
00082b 1419
00082c 0a0a
00082d 0a0a
00082e 0a0a
00082f 0a0a
000830 1414
000831 1414
000832 1414
000833 1414
000834 1414
000835 1414
000836 1414
000837 1414
000838 0a0a
000839 0a0a
00083a 0a0a
00083b 0a0a
00083c 1914
00083d 1e1e
00083e 1e1e
00083f 1e1e
000840 1e1e
000841 1e1e
000842 1e1e
000843 1419
000844 1914
000845 1e1e
000846 1e1e
000847 1e1e
000848 1e1e
000849 1e1e
00084a 1e1e
00084b 1419
00084c 0a0a
00084d 0a0a
00084e 0a0a
00084f 0a0a
000850 1414
000851 1414
000852 1414
000853 1414
000854 1414
000855 1414
000856 1414
000857 1414
000858 0a0a
000859 0a0a
00085a 0a0a
00085b 0a0a
00085c 1914
00085d 231e
00085e 2323
00085f 2323
000860 2323
000861 2323
000862 1e23
000863 1419
000864 1914
000865 231e
000866 2323
000867 2323
000868 2323
000869 2323
00086a 1e23
00086b 1419
00086c 0a0a
00086d 0a0a
00086e 0a0a
00086f 0a0a
000870 1414
000871 1414
000872 1414
000873 1414
000874 1414
000875 1414
000876 1414
000877 1414
000878 0a0a
000879 0a0a
00087a 0a0a
00087b 0a0a
00087c 1914
00087d 231e
00087e 2828
00087f 2828
000880 2828
000881 2828
000882 1e23
000883 1419
000884 1914
000885 231e
000886 2828
000887 2828
000888 2828
000889 2828
00088a 1e23
00088b 1419
00088c 0a0a
00088d 0a0a
00088e 0a0a
00088f 0a0a
000890 1414
000891 1414
000892 1414
000893 1414
000894 1414
000895 1414
000896 1414
000897 1414
000898 0a0a
000899 0a0a
00089a 0a0a
00089b 0a0a
00089c 1914
00089d 231e
00089e 2d28
00089f 2d2d
0008a0 2d2d
0008a1 282d
0008a2 1e23
0008a3 1419
0008a4 1914
0008a5 231e
0008a6 2d28
0008a7 2d2d
0008a8 2d2d
0008a9 282d
0008aa 1e23
0008ab 1419
0008ac 0a0a
0008ad 0a0a
0008ae 0a0a
0008af 0a0a
0008b0 1414
0008b1 1414
0008b2 1414
0008b3 1414
0008b4 1414
0008b5 1414
0008b6 1414
0008b7 1414
0008b8 0a0a
0008b9 0a0a
0008ba 0a0a
0008bb 0a0a
0008bc 1914
0008bd 231e
0008be 2d28
0008bf 3232
0008c0 3232
0008c1 282d
0008c2 1e23
0008c3 1419
0008c4 1914
0008c5 231e
0008c6 2d28
0008c7 3232
0008c8 3232
0008c9 282d
0008ca 1e23
0008cb 1419
0008cc 0a0a
0008cd 0a0a
0008ce 0a0a
0008cf 0a0a
0008d0 1414
0008d1 1414
0008d2 1414
0008d3 1414
0008d4 1414
0008d5 1414
0008d6 1414
0008d7 1414
0008d8 0a0a
0008d9 0a0a
0008da 0a0a
0008db 0a0a
0008dc 1914
0008dd 231e
0008de 2d28
0008df 3732
0008e0 3237
0008e1 282d
0008e2 1e23
0008e3 1419
0008e4 1914
0008e5 231e
0008e6 2d28
0008e7 3732
0008e8 3237
0008e9 282d
0008ea 1e23
0008eb 1419
0008ec 0a0a
0008ed 0a0a
0008ee 0a0a
0008ef 0a0a
0008f0 1414
0008f1 1414
0008f2 1414
0008f3 1414
0008f4 1414
0008f5 1414
0008f6 1414
0008f7 1414
0008f8 0a0a
0008f9 0a0a
0008fa 0a0a
0008fb 0a0a
0008fc 1914
0008fd 231e
0008fe 2d28
0008ff 3732
000900 3237
000901 282d
000902 1e23
000903 1419
000904 1914
000905 231e
000906 2d28
000907 3732
000908 3237
000909 282d
00090a 1e23
00090b 1419
00090c 0a0a
00090d 0a0a
00090e 0a0a
00090f 0a0a
000910 1414
000911 1414
000912 1414
000913 1414
000914 1414
000915 1414
000916 1414
000917 1414
000918 0a0a
000919 0a0a
00091a 0a0a
00091b 0a0a
00091c 1914
00091d 231e
00091e 2d28
00091f 3232
000920 3232
000921 282d
000922 1e23
000923 1419
000924 1914
000925 231e
000926 2d28
000927 3232
000928 3232
000929 282d
00092a 1e23
00092b 1419
00092c 0a0a
00092d 0a0a
00092e 0a0a
00092f 0a0a
000930 1414
000931 1414
000932 1414
000933 1414
000934 1414
000935 1414
000936 1414
000937 1414
000938 0a0a
000939 0a0a
00093a 0a0a
00093b 0a0a
00093c 1914
00093d 231e
00093e 2d28
00093f 2d2d
000940 2d2d
000941 282d
000942 1e23
000943 1419
000944 1914
000945 231e
000946 2d28
000947 2d2d
000948 2d2d
000949 282d
00094a 1e23
00094b 1419
00094c 0a0a
00094d 0a0a
00094e 0a0a
00094f 0a0a
000950 1414
000951 1414
000952 1414
000953 1414
000954 1414
000955 1414
000956 1414
000957 1414
000958 0a0a
000959 0a0a
00095a 0a0a
00095b 0a0a
00095c 1914
00095d 231e
00095e 2828
00095f 2828
000960 2828
000961 2828
000962 1e23
000963 1419
000964 1914
000965 231e
000966 2828
000967 2828
000968 2828
000969 2828
00096a 1e23
00096b 1419
00096c 0a0a
00096d 0a0a
00096e 0a0a
00096f 0a0a
000970 1414
000971 1414
000972 1414
000973 1414
000974 1414
000975 1414
000976 1414
000977 1414
000978 0a0a
000979 0a0a
00097a 0a0a
00097b 0a0a
00097c 1914
00097d 231e
00097e 2323
00097f 2323
000980 2323
000981 2323
000982 1e23
000983 1419
000984 1914
000985 231e
000986 2323
000987 2323
000988 2323
000989 2323
00098a 1e23
00098b 1419
00098c 0a0a
00098d 0a0a
00098e 0a0a
00098f 0a0a
000990 1414
000991 1414
000992 1414
000993 1414
000994 1414
000995 1414
000996 1414
000997 1414
000998 0a0a
000999 0a0a
00099a 0a0a
00099b 0a0a
00099c 1914
00099d 1e1e
00099e 1e1e
00099f 1e1e
0009a0 1e1e
0009a1 1e1e
0009a2 1e1e
0009a3 1419
0009a4 1914
0009a5 1e1e
0009a6 1e1e
0009a7 1e1e
0009a8 1e1e
0009a9 1e1e
0009aa 1e1e
0009ab 1419
0009ac 0a0a
0009ad 0a0a
0009ae 0a0a
0009af 0a0a
0009b0 1414
0009b1 1414
0009b2 1414
0009b3 1414
0009b4 1414
0009b5 1414
0009b6 1414
0009b7 1414
0009b8 0a0a
0009b9 0a0a
0009ba 0a0a
0009bb 0a0a
0009bc 1914
0009bd 1919
0009be 1919
0009bf 1919
0009c0 1919
0009c1 1919
0009c2 1919
0009c3 1419
0009c4 1914
0009c5 1919
0009c6 1919
0009c7 1919
0009c8 1919
0009c9 1919
0009ca 1919
0009cb 1419
0009cc 0a0a
0009cd 0a0a
0009ce 0a0a
0009cf 0a0a
0009d0 1414
0009d1 1414
0009d2 1414
0009d3 1414
0009d4 1414
0009d5 1414
0009d6 1414
0009d7 1414
0009d8 0a0a
0009d9 0a0a
0009da 0a0a
0009db 0a0a
0009dc 1414
0009dd 1414
0009de 1414
0009df 1414
0009e0 1414
0009e1 1414
0009e2 1414
0009e3 1414
0009e4 1414
0009e5 1414
0009e6 1414
0009e7 1414
0009e8 1414
0009e9 1414
0009ea 1414
0009eb 1414
0009ec 0a0a
0009ed 0a0a
0009ee 0a0a
0009ef 0a0a
0009f0 1414
0009f1 1414
0009f2 1414
0009f3 1414
0009f4 0a0a
0009f5 0a0a
0009f6 0a0a
0009f7 0a0a
0009f8 140f
0009f9 1e19
0009fa 2823
0009fb 322d
0009fc 2d32
0009fd 2328
0009fe 191e
0009ff 0f14
000a00 0a0a
000a01 0a0a
000a02 0a0a
000a03 0a0a
000a04 0a0a
000a05 0a0a
000a06 0a0a
000a07 0a0a
000a08 0a0a
000a09 0a0a
000a0a 0a0a
000a0b 0a0a
000a0c 0a0a
000a0d 0a0a
000a0e 0a0a
000a0f 0a0a
000a10 140f
000a11 1e19
000a12 2823
000a13 322d
000a14 0a0a
000a15 0a0a
000a16 0a0a
000a17 0a0a
000a18 140f
000a19 1e19
000a1a 2823
000a1b 322d
000a1c 2d32
000a1d 2328
000a1e 191e
000a1f 0f14
000a20 0a0a
000a21 0a0a
000a22 0a0a
000a23 0a0a
000a24 0a0a
000a25 0a0a
000a26 0a0a
000a27 0a0a
000a28 0a0a
000a29 0a0a
000a2a 0a0a
000a2b 0a0a
000a2c 0a0a
000a2d 0a0a
000a2e 0a0a
000a2f 0a0a
000a30 140f
000a31 1e19
000a32 2823
000a33 322d
000a34 0a0a
000a35 0a0a
000a36 0a0a
000a37 0a0a
000a38 140f
000a39 1e19
000a3a 2823
000a3b 322d
000a3c 2d32
000a3d 2328
000a3e 191e
000a3f 0f14
000a40 0a0a
000a41 0a0a
000a42 0a0a
000a43 0a0a
000a44 0a0a
000a45 0a0a
000a46 0a0a
000a47 0a0a
000a48 0a0a
000a49 0a0a
000a4a 0a0a
000a4b 0a0a
000a4c 0a0a
000a4d 0a0a
000a4e 0a0a
000a4f 0a0a
000a50 140f
000a51 1e19
000a52 2823
000a53 322d
000a54 0a0a
000a55 0a0a
000a56 0a0a
000a57 0a0a
000a58 140f
000a59 1e19
000a5a 2823
000a5b 322d
000a5c 2d32
000a5d 2328
000a5e 191e
000a5f 0f14
000a60 0a0a
000a61 0a0a
000a62 0a0a
000a63 0a0a
000a64 0a0a
000a65 0a0a
000a66 0a0a
000a67 0a0a
000a68 0a0a
000a69 0a0a
000a6a 0a0a
000a6b 0a0a
000a6c 0a0a
000a6d 0a0a
000a6e 0a0a
000a6f 0a0a
000a70 140f
000a71 1e19
000a72 2823
000a73 322d
000a74 0a0a
000a75 0a0a
000a76 0a0a
000a77 0a0a
000a78 140f
000a79 1e19
000a7a 2823
000a7b 322d
000a7c 2d32
000a7d 2328
000a7e 191e
000a7f 0f14
000a80 0a0a
000a81 0a0a
000a82 0a0a
000a83 0a0a
000a84 0a0a
000a85 0a0a
000a86 0a0a
000a87 0a0a
000a88 0a0a
000a89 0a0a
000a8a 0a0a
000a8b 0a0a
000a8c 0a0a
000a8d 0a0a
000a8e 0a0a
000a8f 0a0a
000a90 140f
000a91 1e19
000a92 2823
000a93 322d
000a94 0a0a
000a95 0a0a
000a96 0a0a
000a97 0a0a
000a98 140f
000a99 1e19
000a9a 2823
000a9b 322d
000a9c 2d32
000a9d 2328
000a9e 191e
000a9f 0f14
000aa0 0a0a
000aa1 0a0a
000aa2 0a0a
000aa3 0a0a
000aa4 0a0a
000aa5 0a0a
000aa6 0a0a
000aa7 0a0a
000aa8 0a0a
000aa9 0a0a
000aaa 0a0a
000aab 0a0a
000aac 0a0a
000aad 0a0a
000aae 0a0a
000aaf 0a0a
000ab0 140f
000ab1 1e19
000ab2 2823
000ab3 322d
000ab4 0a0a
000ab5 0a0a
000ab6 0a0a
000ab7 0a0a
000ab8 140f
000ab9 1e19
000aba 2823
000abb 322d
000abc 2d32
000abd 2328
000abe 191e
000abf 0f14
000ac0 0a0a
000ac1 0a0a
000ac2 0a0a
000ac3 0a0a
000ac4 0a0a
000ac5 0a0a
000ac6 0a0a
000ac7 0a0a
000ac8 0a0a
000ac9 0a0a
000aca 0a0a
000acb 0a0a
000acc 0a0a
000acd 0a0a
000ace 0a0a
000acf 0a0a
000ad0 140f
000ad1 1e19
000ad2 2823
000ad3 322d
000ad4 0a0a
000ad5 0a0a
000ad6 0a0a
000ad7 0a0a
000ad8 140f
000ad9 1e19
000ada 2823
000adb 322d
000adc 2d32
000add 2328
000ade 191e
000adf 0f14
000ae0 0a0a
000ae1 0a0a
000ae2 0a0a
000ae3 0a0a
000ae4 0a0a
000ae5 0a0a
000ae6 0a0a
000ae7 0a0a
000ae8 0a0a
000ae9 0a0a
000aea 0a0a
000aeb 0a0a
000aec 0a0a
000aed 0a0a
000aee 0a0a
000aef 0a0a
000af0 140f
000af1 1e19
000af2 2823
000af3 322d
000af4 0a0a
000af5 0a0a
000af6 0a0a
000af7 0a0a
000af8 140f
000af9 1e19
000afa 2823
000afb 322d
000afc 2d32
000afd 2328
000afe 191e
000aff 0f14
000b00 0a0a
000b01 0a0a
000b02 0a0a
000b03 0a0a
000b04 0a0a
000b05 0a0a
000b06 0a0a
000b07 0a0a
000b08 0a0a
000b09 0a0a
000b0a 0a0a
000b0b 0a0a
000b0c 0a0a
000b0d 0a0a
000b0e 0a0a
000b0f 0a0a
000b10 140f
000b11 1e19
000b12 2823
000b13 322d
000b14 0a0a
000b15 0a0a
000b16 0a0a
000b17 0a0a
000b18 140f
000b19 1e19
000b1a 2823
000b1b 322d
000b1c 2d32
000b1d 2328
000b1e 191e
000b1f 0f14
000b20 0a0a
000b21 0a0a
000b22 0a0a
000b23 0a0a
000b24 0a0a
000b25 0a0a
000b26 0a0a
000b27 0a0a
000b28 0a0a
000b29 0a0a
000b2a 0a0a
000b2b 0a0a
000b2c 0a0a
000b2d 0a0a
000b2e 0a0a
000b2f 0a0a
000b30 140f
000b31 1e19
000b32 2823
000b33 322d
000b34 0a0a
000b35 0a0a
000b36 0a0a
000b37 0a0a
000b38 140f
000b39 1e19
000b3a 2823
000b3b 322d
000b3c 2d32
000b3d 2328
000b3e 191e
000b3f 0f14
000b40 0a0a
000b41 0a0a
000b42 0a0a
000b43 0a0a
000b44 0a0a
000b45 0a0a
000b46 0a0a
000b47 0a0a
000b48 0a0a
000b49 0a0a
000b4a 0a0a
000b4b 0a0a
000b4c 0a0a
000b4d 0a0a
000b4e 0a0a
000b4f 0a0a
000b50 140f
000b51 1e19
000b52 2823
000b53 322d
000b54 0a0a
000b55 0a0a
000b56 0a0a
000b57 0a0a
000b58 140f
000b59 1e19
000b5a 2823
000b5b 322d
000b5c 2d32
000b5d 2328
000b5e 191e
000b5f 0f14
000b60 0a0a
000b61 0a0a
000b62 0a0a
000b63 0a0a
000b64 0a0a
000b65 0a0a
000b66 0a0a
000b67 0a0a
000b68 0a0a
000b69 0a0a
000b6a 0a0a
000b6b 0a0a
000b6c 0a0a
000b6d 0a0a
000b6e 0a0a
000b6f 0a0a
000b70 140f
000b71 1e19
000b72 2823
000b73 322d
000b74 0a0a
000b75 0a0a
000b76 0a0a
000b77 0a0a
000b78 140f
000b79 1e19
000b7a 2823
000b7b 322d
000b7c 2d32
000b7d 2328
000b7e 191e
000b7f 0f14
000b80 0a0a
000b81 0a0a
000b82 0a0a
000b83 0a0a
000b84 0a0a
000b85 0a0a
000b86 0a0a
000b87 0a0a
000b88 0a0a
000b89 0a0a
000b8a 0a0a
000b8b 0a0a
000b8c 0a0a
000b8d 0a0a
000b8e 0a0a
000b8f 0a0a
000b90 140f
000b91 1e19
000b92 2823
000b93 322d
000b94 0a0a
000b95 0a0a
000b96 0a0a
000b97 0a0a
000b98 140f
000b99 1e19
000b9a 2823
000b9b 322d
000b9c 2d32
000b9d 2328
000b9e 191e
000b9f 0f14
000ba0 0a0a
000ba1 0a0a
000ba2 0a0a
000ba3 0a0a
000ba4 0a0a
000ba5 0a0a
000ba6 0a0a
000ba7 0a0a
000ba8 0a0a
000ba9 0a0a
000baa 0a0a
000bab 0a0a
000bac 0a0a
000bad 0a0a
000bae 0a0a
000baf 0a0a
000bb0 140f
000bb1 1e19
000bb2 2823
000bb3 322d
000bb4 0a0a
000bb5 0a0a
000bb6 0a0a
000bb7 0a0a
000bb8 140f
000bb9 1e19
000bba 2823
000bbb 322d
000bbc 2d32
000bbd 2328
000bbe 191e
000bbf 0f14
000bc0 0a0a
000bc1 0a0a
000bc2 0a0a
000bc3 0a0a
000bc4 0a0a
000bc5 0a0a
000bc6 0a0a
000bc7 0a0a
000bc8 0a0a
000bc9 0a0a
000bca 0a0a
000bcb 0a0a
000bcc 0a0a
000bcd 0a0a
000bce 0a0a
000bcf 0a0a
000bd0 140f
000bd1 1e19
000bd2 2823
000bd3 322d
000bd4 0a0a
000bd5 0a0a
000bd6 0a0a
000bd7 0a0a
000bd8 140f
000bd9 1e19
000bda 2823
000bdb 322d
000bdc 2d32
000bdd 2328
000bde 191e
000bdf 0f14
000be0 0a0a
000be1 0a0a
000be2 0a0a
000be3 0a0a
000be4 0a0a
000be5 0a0a
000be6 0a0a
000be7 0a0a
000be8 0a0a
000be9 0a0a
000bea 0a0a
000beb 0a0a
000bec 0a0a
000bed 0a0a
000bee 0a0a
000bef 0a0a
000bf0 140f
000bf1 1e19
000bf2 2823


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

"ATmega2560" register use summary:
x  :   0 y  :   0 z  :   8 r0 :   4 r1 :   2 r2 :   3 r3 :   3 r4 :   2 
r5 :   0 r6 :   0 r7 :   0 r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 
r13:   0 r14:   0 r15:   0 r16: 305 r17:  41 r18:  38 r19:  79 r20:  68 
r21:  10 r22:   8 r23:   2 r24:  14 r25:   4 r26:  23 r27:  17 r28:   6 
r29:   0 r30:  14 r31:  16 
Registers used: 21 out of 35 (60.0%)

"ATmega2560" instruction use summary:
.lds  :   0 .sts  :   0 adc   :   9 add   :  38 adiw  :   0 and   :   1 
andi  :   4 asr   :   0 bclr  :   0 bld   :   0 brbc  :   0 brbs  :   0 
brcc  :   0 brcs  :   0 break :   0 breq  :  16 brge  :   0 brhc  :   0 
brhs  :   0 brid  :   0 brie  :   0 brlo  :   2 brlt  :   0 brmi  :   0 
brne  :  10 brpl  :   0 brsh  :  10 brtc  :   0 brts  :   0 brvc  :   0 
brvs  :   0 bset  :   0 bst   :   0 call  :   0 cbi   :   5 cbr   :   0 
clc   :  13 clh   :   0 cli   :   0 cln   :   0 clr   :   5 cls   :   0 
clt   :   0 clv   :   0 clz   :   0 com   :   0 cp    :  27 cpc   :   0 
cpi   :   8 cpse  :   0 dec   :   5 eicall:   0 eijmp :   0 elpm  :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   7 inc   :  13 jmp   :   6 ld    :   0 ldd   :   0 ldi   : 273 
lds   :   0 lpm   :  12 lsl   :   3 lsr   :   0 mov   :  27 movw  :   0 
mul   :   4 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   9 
ori   :   2 out   :  17 pop   :   7 push  :   7 rcall : 341 ret   :   7 
reti  :   6 rjmp  :  34 rol   :   0 ror   :   0 sbc   :   4 sbci  :   0 
sbi   :   5 sbic  :   0 sbis  :   0 sbiw  :   1 sbr   :   0 sbrc  :   8 
sbrs  :   7 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   3 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :   2 std   :   0 sts   :  21 sub   :  10 subi  :   1 swap  :   0 
tst   :   0 wdr   :   0 
Instructions used: 42 out of 116 (36.2%)

"ATmega2560" memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0017e8   2024   4096   6120  262144   2.3%
[.dseg] 0x000200 0x000200      0      0      0    8192   0.0%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 0 warnings
